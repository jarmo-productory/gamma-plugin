const c={enableCloudSync:!1,syncDebounceMs:500,maxRetries:3,dataVersion:1};class i{constructor(e={}){this.syncQueue=[],this.config={...c,...e}}async save(e,t){try{const r={version:this.config.dataVersion,data:t,timestamp:new Date,presentation_url:this.extractPresentationUrl(e)};await this.chromeStorageSave(e,r),this.config.enableCloudSync&&this.addToSyncQueue(e,t,"save")}catch(r){throw console.error("[StorageManager] Save failed:",r),r}}async load(e){try{const t=await this.chromeStorageLoad(e);if(!t)return;if(!this.isVersionedData(t))return console.log("[StorageManager] Loading legacy data for key:",e),t;const r=t;return r.version!==this.config.dataVersion&&console.log(`[StorageManager] Data version mismatch for key ${e}: ${r.version} vs ${this.config.dataVersion}`),r.data}catch(t){throw console.error("[StorageManager] Load failed:",t),t}}async remove(e){try{await this.chromeStorageRemove(e),this.config.enableCloudSync&&this.addToSyncQueue(e,null,"remove")}catch(t){throw console.error("[StorageManager] Remove failed:",t),t}}async clear(){try{await this.chromeStorageClear(),this.syncQueue=[]}catch(e){throw console.error("[StorageManager] Clear failed:",e),e}}chromeStorageSave(e,t){return new Promise((r,n)=>{chrome.storage.local.set({[e]:t},()=>{if(chrome.runtime.lastError)return n(chrome.runtime.lastError);r()})})}chromeStorageLoad(e){return new Promise((t,r)=>{chrome.storage.local.get(e,n=>{if(chrome.runtime.lastError)return r(chrome.runtime.lastError);t(n[e])})})}chromeStorageRemove(e){return new Promise((t,r)=>{chrome.storage.local.remove(e,()=>{if(chrome.runtime.lastError)return r(chrome.runtime.lastError);t()})})}chromeStorageClear(){return new Promise((e,t)=>{chrome.storage.local.clear(()=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);e()})})}isVersionedData(e){return e&&typeof e=="object"&&"version"in e&&"data"in e&&"timestamp"in e}extractPresentationUrl(e){const t=e.match(/^timetable-(.+)$/);return t?t[1]:void 0}addToSyncQueue(e,t,r){const n={key:e,data:t,operation:r,timestamp:new Date,attempts:0};this.syncQueue.push(n),this.scheduleSyncProcess()}scheduleSyncProcess(){this.syncTimer&&clearTimeout(this.syncTimer),this.syncTimer=setTimeout(()=>{this.processSyncQueue()},this.config.syncDebounceMs)}async processSyncQueue(){if(!(!this.config.enableCloudSync||this.syncQueue.length===0)){console.log(`[StorageManager] Processing sync queue: ${this.syncQueue.length} items`);for(const e of this.syncQueue)console.log("[StorageManager] Sync queue item:",e);this.syncQueue=[]}}getSyncQueueStatus(){return{count:this.syncQueue.length,items:[...this.syncQueue]}}updateConfig(e){this.config={...this.config,...e}}}const u=new i;function f(a,e){return u.save(a,e)}function m(a){return u.load(a)}function d(a,e){let t;return function(...r){const n=this;clearTimeout(t),t=setTimeout(()=>a.apply(n,r),e)}}const l={features:{cloudSync:!1,authentication:!1,webDashboard:!1,realTimeSync:!1,autoSync:!1,offlineMode:!0,exportFeatures:!0},version:{current:"0.0.5",minimumForCloud:"0.1.0"}};class o{constructor(e){this.config={...l,...e}}getFeatureFlag(e){return this.config.features[e]}setFeatureFlag(e,t){this.config.features[e]=t}getConfig(){return{...this.config}}updateConfig(e){this.config={...this.config,...e}}isFeatureEnabled(e){return this.getFeatureFlag(e)}static getEnvironmentConfig(){return{api:{baseUrl:typeof process<"u"&&!1?"http://localhost:3000":"https://api.gamma-timetable.app",timeout:5e3}}}}const s=new o(o.getEnvironmentConfig());class h{constructor(e){this.authStateCallbacks=[],this.storageManager=e||new i,this.currentState={isAuthenticated:!1,isLoading:!1,user:null,session:null,lastError:null}}async isAuthenticated(){return s.isFeatureEnabled("authentication"),!1}async login(e,t){throw s.isFeatureEnabled("authentication")?new Error("Authentication will be available in Sprint 1"):new Error("Authentication is not enabled")}async logout(){s.isFeatureEnabled("authentication")&&this.updateAuthState({isAuthenticated:!1,isLoading:!1,user:null,session:null,lastError:null})}async refreshToken(){throw s.isFeatureEnabled("authentication")?new Error("Token refresh will be available in Sprint 1"):new Error("Authentication is not enabled")}async getCurrentUser(){return s.isFeatureEnabled("authentication"),null}async getAuthState(){return{...this.currentState}}onAuthStateChange(e){return this.authStateCallbacks.push(e),e({...this.currentState}),()=>{const t=this.authStateCallbacks.indexOf(e);t>-1&&this.authStateCallbacks.splice(t,1)}}async initialize(){try{this.updateAuthState({...this.currentState,isLoading:!0});const e=await this.isAuthenticated();this.updateAuthState({isAuthenticated:e,isLoading:!1,user:null,session:null,lastError:null}),console.log("[AuthManager] Initialized in guest mode (Sprint 0)")}catch(e){console.error("[AuthManager] Initialization failed:",e),this.updateAuthState({isAuthenticated:!1,isLoading:!1,user:null,session:null,lastError:e instanceof Error?e.message:"Unknown error"})}}shouldShowAuthUI(){return s.isFeatureEnabled("authentication")}async getGuestPreferences(){try{const e=await this.storageManager.load("guest_preferences");return{theme:"auto",default_duration:5,auto_sync:!1,export_format:"xlsx",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,...e}}catch(e){return console.error("[AuthManager] Failed to load guest preferences:",e),{theme:"auto",default_duration:5,auto_sync:!1,export_format:"xlsx",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone}}}async saveGuestPreferences(e){try{const r={...await this.getGuestPreferences(),...e};await this.storageManager.save("guest_preferences",r)}catch(t){console.error("[AuthManager] Failed to save guest preferences:",t)}}updateAuthState(e){this.currentState={...this.currentState,...e},this.authStateCallbacks.forEach(t=>{try{t({...this.currentState})}catch(r){console.error("[AuthManager] Error in auth state callback:",r)}})}}const g=new h;g.initialize().catch(a=>{console.error("[AuthManager] Failed to initialize:",a)});export{g as a,s as c,d,m as l,f as s};
