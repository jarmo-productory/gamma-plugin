import"./assets/modulepreload-polyfill.js";function h(e,n={}){const{startTime:t="09:00",defaultDuration:r=5,breakAfter:o=60,breakDuration:s=10}=n;let c=new Date(`1970-01-01T${t}:00`),g=0;const m=e.map(d=>{const i=d.duration===0?0:d.duration||r,l=new Date(c);c.setMinutes(c.getMinutes()+i);const u=new Date(c);return g+=i,{id:d.id,title:d.title,content:d.content,startTime:l.toTimeString().slice(0,5),endTime:u.toTimeString().slice(0,5),duration:i}});return{startTime:t,items:m,totalDuration:g}}function S(e){let n=`Item,Start Time,Duration (min),End Time
`;return e.items.forEach(t=>{const r=t.title.replace(/"/g,'""');n+=`"${r}",${t.startTime},${t.duration},${t.endTime}
`}),n}function v(e,n,t=!1){const r=document.createElement("a");if(r.setAttribute("download",e),r.style.visibility="hidden",document.body.appendChild(r),t)r.href=n;else{const o=new Blob([n],{type:"text/csv;charset=utf-8;"});r.href=URL.createObjectURL(o)}r.click(),document.body.removeChild(r)}function x(e){const n=XLSX.utils.json_to_sheet(e.items),t=XLSX.utils.book_new();XLSX.utils.book_append_sheet(t,n,"Timetable");const r=XLSX.write(t,{bookType:"xlsx",type:"array"});return new Blob([r],{type:"application/octet-stream"})}function w(e){return navigator.clipboard.writeText(e)}function y(e,n){return new Promise((t,r)=>{chrome.storage.local.set({[e]:n},()=>{if(chrome.runtime.lastError)return r(chrome.runtime.lastError);t()})})}function C(e){return new Promise((n,t)=>{chrome.storage.local.get(e,r=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);n(r[e])})})}function $(e,n){let t;return function(...r){const o=this;clearTimeout(t),t=setTimeout(()=>e.apply(o,r),n)}}const D="0.0.2";let p=!1,b=[],a=null;async function L(){try{return await new Promise((e,n)=>{chrome.tabs.query({active:!0,currentWindow:!0},t=>{if(chrome.runtime.lastError)return n(new Error(chrome.runtime.lastError.message));t[0]&&t[0].url?e(t[0].url):(console.warn("Could not get current tab URL. Falling back to default."),e("default-timetable"))})})}catch(e){return console.error("Error getting current tab URL:",e),"default-timetable"}}async function T(){return`timetable-${await L()}`}function k(e){let n="";return e.forEach(t=>{switch(t.type){case"paragraph":n+=`<p>${t.text}</p>`;break;case"image":n+=`<img src="${t.text}" class="thumbnail-img">`;break;case"link":n+=`<a href="${t.text}" target="_blank" class="content-link">${t.text}</a>`;break;case"list_item":n+=`<p>${t.text}</p>`,t.subItems&&t.subItems.length>0&&(n+='<ul class="sub-items-list">',t.subItems.forEach(r=>{n+=`<li class="sub-item">${r}</li>`}),n+="</ul>");break}}),n}function M(e=[]){const n=e.length;let t=e[0]?JSON.stringify(e[0],null,2):"N/A";return`
    <div class="debug-info">
      <strong>Debug Info</strong><br>
      Slides Detected: <strong>${n}</strong><br>
      Connected: <span style="color:${p?"green":"red"};font-weight:bold;">${p?"Yes":"No"}</span><br>
      <details><summary>First Slide Preview</summary><pre>${t}</pre></details>
    </div>
  `}function f(e){a=e;const n=document.getElementById("sidebar-main");if(!n)return;const t=document.createElement("h3");t.innerHTML=`Timetable (Total: ${e.totalDuration} mins)`;const r=document.createElement("div");r.className="sticky-toolbar";const o=document.createElement("button");o.className="btn",o.textContent="Regenerate Timetable",o.onclick=()=>{const i=prompt("Enter start time (e.g., 09:00):","09:00");if(i){const l=h(b,{startTime:i});f(l),T().then(u=>y(u,l))}},r.appendChild(o);const s=document.createElement("div");s.className="export-options",s.innerHTML=`
    <button id="export-csv-btn" class="export-btn">CSV</button>
    <button id="export-xlsx-btn" class="export-btn">Excel</button>
    <button id="copy-clipboard-btn" class="export-btn">Copy</button>
  `,r.appendChild(s),n.innerHTML="",n.appendChild(t),n.appendChild(r);const c=s.querySelector("#export-csv-btn");c.onclick=()=>{if(!a)return;const i=S(a),l=`gamma-timetable-${new Date().toISOString().slice(0,10)}.csv`;v(l,i)};const g=s.querySelector("#export-xlsx-btn");g.onclick=()=>{if(!a)return;const i=x(a),l=`gamma-timetable-${new Date().toISOString().slice(0,10)}.xlsx`,u=URL.createObjectURL(i);v(l,u,!0)};const m=s.querySelector("#copy-clipboard-btn");m.onclick=()=>{if(!a)return;const i=S(a);w(i).then(()=>{m.textContent="Copied!",setTimeout(()=>{m.textContent="Copy"},2e3)})},e.items.forEach(i=>{const l=document.createElement("div");l.className="slide-item";const u=k(i.content);l.innerHTML=`
      <div class="slide-item-header">
        <h3 class="slide-item__title">${i.title}</h3>
        <div class="slide-item-time">
          <span style="font-size: 12px; color: #6b7280;">${i.startTime} - ${i.endTime}</span>
        </div>
      </div>
      <div class="duration-slider-container">
          <input type="range" min="0.5" max="30" value="${i.duration}" step="0.5" class="duration-slider" data-id="${i.id}">
          <span class="duration-value">${i.duration} min</span>
      </div>
      <div class="slide-item__content">
        ${u}
      </div>
    `,n.appendChild(l)}),n.querySelectorAll(".duration-slider").forEach(i=>{i.addEventListener("input",_),i.addEventListener("change",X)})}const E=$(async()=>{if(a){const e=await T();y(e,a),console.log("Timetable saved.")}},500);function _(e){const n=parseFloat(e.target.value).toFixed(1),t=e.target.nextElementSibling;t&&(t.textContent=`${n} min`)}function X(e){const n=e.target.getAttribute("data-id"),t=parseFloat(e.target.value);if(a){const r=a.items.find(o=>o.id===n);if(r){r.duration=t;const o=h(a.items,{startTime:a.startTime});f(o),E()}}}document.addEventListener("DOMContentLoaded",async()=>{const e=document.getElementById("version-display"),n=document.getElementById("sidebar-footer");e&&(e.textContent=`v${D}`);const t=(r=[])=>{if(b=r||[],r.length>0&&!a){const s=h(r,{startTime:"09:00"});f(s),T().then(c=>y(c,s))}n&&(n.innerHTML=M(r))};try{const r=await T(),o=await C(r);o?f(o):chrome.runtime.sendMessage({type:"REQUEST_GAMMA_SLIDES"},s=>{p=!0,t(s==null?void 0:s.slides)})}catch(r){console.error("Failed to load initial data:",r),chrome.runtime.sendMessage({type:"REQUEST_GAMMA_SLIDES"},o=>{p=!0,t(o==null?void 0:o.slides)})}chrome.runtime.onMessage.addListener((r,o,s)=>{if(r.type==="GAMMA_SLIDES")if(console.log("Received live slide update:",r.slides),p=!0,b=r.slides||[],a){const c=h(b,{startTime:a.startTime});f(c),E()}else t(b)})});
