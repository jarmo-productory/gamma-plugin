import"./assets/modulepreload-polyfill.js";function g(n,e={}){const{startTime:t="09:00",defaultDuration:i=5,breakAfter:o=60,breakDuration:a=10,existingItems:u=[]}=e;let d=new Date(`1970-01-01T${t}:00`),m=0;const y=n.map(r=>{const s=u.find($=>$.id===r.id),l=s?s.duration:r.duration===0?0:r.duration||i,w=new Date(d);d.setMinutes(d.getMinutes()+l);const C=new Date(d);return m+=l,{id:r.id,title:r.title,content:r.content,startTime:w.toTimeString().slice(0,5),endTime:C.toTimeString().slice(0,5),duration:l}});return{startTime:t,items:y,totalDuration:m}}function T(n){let e=`Item,Start Time,Duration (min),End Time
`;return n.items.forEach(t=>{const i=t.title.replace(/"/g,'""');e+=`"${i}",${t.startTime},${t.duration},${t.endTime}
`}),e}function x(n,e,t=!1){const i=document.createElement("a");if(i.setAttribute("download",n),i.style.visibility="hidden",document.body.appendChild(i),t)i.href=e;else{const o=new Blob([e],{type:"text/csv;charset=utf-8;"});i.href=URL.createObjectURL(o)}i.click(),document.body.removeChild(i)}function D(n){const e=XLSX.utils.json_to_sheet(n.items),t=XLSX.utils.book_new();XLSX.utils.book_append_sheet(t,e,"Timetable");const i=XLSX.write(t,{bookType:"xlsx",type:"array"});return new Blob([i],{type:"application/octet-stream"})}function L(n){return navigator.clipboard.writeText(n)}function h(n,e){return new Promise((t,i)=>{chrome.storage.local.set({[n]:e},()=>{if(chrome.runtime.lastError)return i(chrome.runtime.lastError);t()})})}function E(n){return new Promise((e,t)=>{chrome.storage.local.get(n,i=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);e(i[n])})})}function k(n,e){let t;return function(...i){const o=this;clearTimeout(t),t=setTimeout(()=>n.apply(o,i),e)}}const M="0.0.2";let b=!1,v=[],c=null;async function _(){try{return await new Promise((n,e)=>{chrome.tabs.query({active:!0,currentWindow:!0},t=>{if(chrome.runtime.lastError)return e(new Error(chrome.runtime.lastError.message));t[0]&&t[0].url?n(t[0].url):(console.warn("Could not get current tab URL. Falling back to default."),n("default-timetable"))})})}catch(n){return console.error("Error getting current tab URL:",n),"default-timetable"}}async function p(){return`timetable-${await _()}`}function I(n){let e="";return n.forEach(t=>{switch(t.type){case"paragraph":e+=`<p>${t.text}</p>`;break;case"image":e+=`<img src="${t.text}" class="thumbnail-img">`;break;case"link":e+=`<a href="${t.text}" target="_blank" class="content-link">${t.text}</a>`;break;case"list_item":e+=`<p>${t.text}</p>`,t.subItems&&t.subItems.length>0&&(e+='<ul class="sub-items-list">',t.subItems.forEach(i=>{e+=`<li class="sub-item">${i}</li>`}),e+="</ul>");break}}),e}function S(n=[]){const e=n.length;let t=n[0]?JSON.stringify(n[0],null,2):"N/A";return`
    <div class="debug-info">
      <strong>Debug Info</strong><br>
      Slides Detected: <strong>${e}</strong><br>
      Connected: <span style="color:${b?"green":"red"};font-weight:bold;">${b?"Yes":"No"}</span><br>
      <details><summary>First Slide Preview</summary><pre>${t}</pre></details>
    </div>
  `}function f(n){c=n;const e=document.getElementById("sidebar-main");if(!e)return;const t=document.createElement("h3");t.innerHTML=`Timetable (Total: ${n.totalDuration} mins)`;const i=document.createElement("div");i.className="sticky-toolbar";const o=document.createElement("button");o.className="btn",o.textContent="Regenerate Timetable",o.onclick=()=>{const r=prompt("Enter start time (e.g., 09:00):","09:00");if(r){const s=g(v,{startTime:r});f(s),p().then(l=>h(l,s))}},i.appendChild(o);const a=document.createElement("div");a.className="export-options",a.innerHTML=`
    <button id="export-csv-btn" class="export-btn">CSV</button>
    <button id="export-xlsx-btn" class="export-btn">Excel</button>
    <button id="copy-clipboard-btn" class="export-btn">Copy</button>
  `,i.appendChild(a),e.innerHTML="",e.appendChild(t),e.appendChild(i);const u=a.querySelector("#export-csv-btn");u.onclick=()=>{if(!c)return;const r=T(c),s=`gamma-timetable-${new Date().toISOString().slice(0,10)}.csv`;x(s,r)};const d=a.querySelector("#export-xlsx-btn");d.onclick=()=>{if(!c)return;const r=D(c),s=`gamma-timetable-${new Date().toISOString().slice(0,10)}.xlsx`,l=URL.createObjectURL(r);x(s,l,!0)};const m=a.querySelector("#copy-clipboard-btn");m.onclick=()=>{if(!c)return;const r=T(c);L(r).then(()=>{m.textContent="Copied!",setTimeout(()=>{m.textContent="Copy"},2e3)})},n.items.forEach(r=>{const s=document.createElement("div");s.className="slide-item";const l=I(r.content);s.innerHTML=`
      <div class="slide-item-header">
        <h3 class="slide-item__title">${r.title}</h3>
        <div class="slide-item-time">
          <span style="font-size: 12px; color: #6b7280;">${r.startTime} - ${r.endTime}</span>
        </div>
      </div>
      <div class="duration-slider-container">
          <input type="range" min="0.5" max="30" value="${r.duration}" step="0.5" class="duration-slider" data-id="${r.id}">
          <span class="duration-value">${r.duration} min</span>
      </div>
      <div class="slide-item__content">
        ${l}
      </div>
    `,e.appendChild(s)}),e.querySelectorAll(".duration-slider").forEach(r=>{r.addEventListener("input",B),r.addEventListener("change",A)})}const X=k(async()=>{if(c){const n=await p();h(n,c),console.log("Timetable saved.")}},500);function B(n){const e=parseFloat(n.target.value).toFixed(1),t=n.target.nextElementSibling;t&&(t.textContent=`${e} min`)}function A(n){const e=n.target.getAttribute("data-id"),t=parseFloat(n.target.value);if(c){const i=c.items.find(o=>o.id===e);if(i){i.duration=t;const o=g(c.items,{startTime:c.startTime});f(o),X()}}}document.addEventListener("DOMContentLoaded",async()=>{const n=document.getElementById("version-display"),e=document.getElementById("sidebar-footer");n&&(n.textContent=`v${M}`);const t=async i=>{if(v=i||[],i.length===0){document.getElementById("sidebar-main").innerHTML="<p>No slides detected in this Gamma presentation.</p>";return}const o=await p(),a=await E(o),u=g(i,{startTime:(a==null?void 0:a.startTime)||"09:00",existingItems:(a==null?void 0:a.items)||[]});f(u),h(o,u),e&&(e.innerHTML=S(i))};try{const i=await p(),o=await E(i);o&&o.items.length>0&&(f(o),e&&(e.innerHTML=S(o.items))),chrome.runtime.sendMessage({type:"REQUEST_GAMMA_SLIDES"},a=>{b=!0,a&&a.slides&&t(a.slides)})}catch(i){console.error("Error on initial load:",i)}chrome.runtime.onMessage.addListener((i,o,a)=>{i.type==="GAMMA_SLIDES_UPDATED"&&(b=!0,t(i.slides),a({status:"ok"}))})});
