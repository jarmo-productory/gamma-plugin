function h(){const r=[];return document.querySelectorAll("div.card-wrapper[data-card-id]").forEach((e,n)=>{var s;try{const i=e.getAttribute("data-card-id")||`slide-${n}`,d=e.querySelector('.node-heading .heading [data-node-view-content-inner="heading"]'),u=d&&((s=d.textContent)==null?void 0:s.trim())||"",o=[];e.querySelectorAll(".node-paragraph, .node-image, .node-link").forEach(a=>{var l;if(a.classList.contains("node-paragraph"))o.push(((l=a.textContent)==null?void 0:l.trim())||"");else if(a.classList.contains("node-image")){const t=a.querySelector("img");t&&t.src&&o.push(`[Image: ${t.src}]`)}else if(a.classList.contains("node-link")){const t=a.querySelector("a");t&&t.href&&o.push(`[Link: ${t.href}]`)}}),r.push({id:i,title:u,content:o,order:n,level:0})}catch(i){console.warn("Failed to extract slide",n,i)}}),r}function p(){let r=0;const c=new MutationObserver(()=>{const e=document.querySelectorAll("div.card-wrapper[data-card-id]");if(e.length&&e.length!==r){r=e.length;const n=h();console.log("Extracted Gamma slides:",n);try{chrome.runtime.sendMessage({type:"GAMMA_SLIDES",slides:n})}catch(s){console.warn("Could not send slide data. Extension context may be invalidated.",s),c.disconnect()}}});c.observe(document.body,{childList:!0,subtree:!0})}window.location.hostname.endsWith("gamma.app")&&p();
