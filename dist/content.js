function S(){const i=[];return document.querySelectorAll("div.card-wrapper[data-card-id]").forEach((n,s)=>{var r;try{const c=n.getAttribute("data-card-id")||`slide-${s}`,l=n.querySelector('.node-heading .heading [data-node-view-content-inner="heading"]'),y=l&&((r=l.textContent)==null?void 0:r.trim())||"",o=[];n.querySelectorAll(".node-paragraph, .node-image, .node-link, .node-list").forEach(e=>{var d;if(e.classList.contains("node-paragraph"))o.push({text:((d=e.textContent)==null?void 0:d.trim())||"",subItems:[]});else if(e.classList.contains("node-image")){const t=e.querySelector("img");t&&t.src&&o.push({text:`[Image: ${t.src}]`,subItems:[]})}else if(e.classList.contains("node-link")){const t=e.querySelector("a");t&&t.href&&o.push({text:`[Link: ${t.href}]`,subItems:[]})}else e.classList.contains("node-list")&&e.querySelectorAll('div[data-node-view-content-inner="list-item"]').forEach(u=>{var f,g;const m=((g=(f=u.childNodes[0])==null?void 0:f.textContent)==null?void 0:g.trim())||"",h=[],p=u.querySelector('div[data-node-view-content-inner="list"]');p&&p.querySelectorAll('div[data-node-view-content-inner="list-item"]').forEach(b=>{var v;h.push(((v=b.textContent)==null?void 0:v.trim())||"")}),m&&o.push({text:m,subItems:h})})}),i.push({id:c,title:y,content:o,order:s,level:0})}catch(c){console.warn("Failed to extract slide",s,c)}}),i}function x(){let i=0;const a=new MutationObserver(()=>{const n=document.querySelectorAll("div.card-wrapper[data-card-id]");if(n.length&&n.length!==i){i=n.length;const s=S();console.log("Extracted Gamma slides:",s);try{chrome.runtime.sendMessage({type:"GAMMA_SLIDES",slides:s})}catch(r){console.warn("Could not send slide data. Extension context may be invalidated.",r),a.disconnect()}}});a.observe(document.body,{childList:!0,subtree:!0})}window.location.hostname.endsWith("gamma.app")&&x();
