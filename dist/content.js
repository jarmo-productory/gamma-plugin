function x(a,i){let n;return function(...t){const s=this;clearTimeout(n),n=window.setTimeout(()=>a.apply(s,t),i)}}function A(){const a=[],i=new Set;return document.querySelectorAll("div.card-wrapper[data-card-id]").forEach((t,s)=>{var c;try{const e=t.getAttribute("data-card-id");if(!e||i.has(e))return;i.add(e);const b=parseInt(t.getAttribute("data-card-depth")||"0",10),l=t.querySelector('.node-heading .heading [data-node-view-content-inner="heading"]'),w=l&&((c=l.textContent)==null?void 0:c.trim())||"",d=[];t.querySelectorAll(".node-paragraph, .node-image, .node-link, .node-list").forEach(o=>{var u;if(o.classList.contains("node-paragraph"))d.push({type:"paragraph",text:((u=o.textContent)==null?void 0:u.trim())||"",subItems:[]});else if(o.classList.contains("node-image")){const r=o.querySelector("img");r&&r.src&&d.push({type:"image",text:r.src,subItems:[]})}else if(o.classList.contains("node-link")){const r=o.querySelector("a");r&&r.href&&d.push({type:"link",text:r.href,subItems:[]})}else o.classList.contains("node-list")&&o.querySelectorAll('div[data-node-view-content-inner="list-item"]').forEach(m=>{var g,y;const f=((y=(g=m.childNodes[0])==null?void 0:g.textContent)==null?void 0:y.trim())||"",p=[],h=m.querySelector('div[data-node-view-content-inner="list"]');h&&h.querySelectorAll('div[data-node-view-content-inner="list-item"]').forEach(S=>{var v;p.push(((v=S.textContent)==null?void 0:v.trim())||"")}),f&&d.push({type:"list_item",text:f,subItems:p})})}),a.push({id:e,title:w,content:d,order:s,level:b})}catch(e){console.error(`Error processing slide ${s}:`,e)}}),a}function E(){const a=x(()=>{const n=A();console.log("Re-extracting slides due to DOM change:",n);try{chrome.runtime.sendMessage({type:"GAMMA_SLIDES_UPDATED",slides:n})}catch(t){console.warn("Could not send slide data. Extension context may be invalidated.",t),i.disconnect()}},500),i=new MutationObserver(n=>{let t=!1;for(const s of n)if(s.type==="childList"){const c=e=>e instanceof HTMLElement&&e.matches("div.card-wrapper[data-card-id]");for(const e of Array.from(s.addedNodes))if(c(e)||e instanceof HTMLElement&&e.querySelector("div.card-wrapper[data-card-id]")){console.log("Relevant card added:",e),t=!0;break}if(t)break;for(const e of Array.from(s.removedNodes))if(c(e)){console.log("Relevant card removed:",e),t=!0;break}if(t)break}t&&a()});i.observe(document.body,{childList:!0,subtree:!0})}window.location.hostname.endsWith("gamma.app")&&E();
