{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow@alpha",
      "mcp__flow-nexus",
      "mcp__claude-flow__swarm_status",
      "mcp__claude-flow__agent_list",
      "mcp__claude-flow__health_check",
      "mcp__claude-flow__swarm_init",
      "Bash(netlify:*)",
      "Bash(find:*)",
      "Bash(npm ls:*)",
      "Bash(supabase projects:*)",
      "Bash(gh repo view:*)",
      "Bash(npm run build:*)",
      "Bash(awk:*)",
      "Bash(curl:*)",
      "Bash(time curl:*)",
      "Bash(chmod:*)",
      "Bash(supabase:*)",
      "mcp__claude-flow__agent_spawn",
      "Bash(psql:*)",
      "Bash(pg_dump:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "WebSearch",
      "WebFetch(domain:supabase.com)",
      "mcp__claude-flow__task_orchestrate",
      "mcp__claude-flow__memory_usage",
      "Bash(npx:*)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(node:*)",
      "Bash(git pull:*)",
      "Bash(gh pr create:*)",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "Bash(xargs sed:*)",
      "Bash(git rm:*)",
      "Read(//Users/jarmotuisk/Projects/gamma-plugin//**)",
      "Read(//Users/jarmotuisk//**)",
      "Bash(git reset:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(./scripts/performance-monitor.sh:*)",
      "Bash(git ls-tree:*)",
      "Bash(gh pr list:*)",
      "Bash(git log:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:extension:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run build:web:*)",
      "Bash(timeout 60 npm run build)",
      "Bash(gtimeout 30 npm run build)",
      "Bash(npm run:*)",
      "Bash(timeout 90 npm run build)",
      "Bash(gtimeout 60 npm run build)",
      "Bash(jobs)",
      "Bash(git merge:*)",
      "Read(//tmp/**)",
      "Bash(npm test:*)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(gtimeout:*)",
      "WebFetch(domain:answers.netlify.com)",
      "Bash(for file in packages/web/src/app/api/devices/*/route.ts packages/web/src/app/api/presentations/*/route.ts packages/web/src/app/api/presentations/*/*/route.ts packages/web/src/app/api/user/*/route.ts packages/web/src/app/api/user/*/*/route.ts)",
      "Bash(do)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(echo \"=== $file ===\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(for:*)"
    ],
    "deny": []
  }
}