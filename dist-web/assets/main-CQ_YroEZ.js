(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function n(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(t){if(t.ep)return;t.ep=!0;const r=n(t);fetch(t.href,r)}})();const v="modulepreload",C=function(e){return"/"+e},w={},A=function(l,n,a){let t=Promise.resolve();if(n&&n.length>0){let s=function(c){return Promise.all(c.map(g=>Promise.resolve(g).then(p=>({status:"fulfilled",value:p}),p=>({status:"rejected",reason:p}))))};document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),u=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));t=s(n.map(c=>{if(c=C(c),c in w)return;w[c]=!0;const g=c.endsWith(".css"),p=g?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${p}`))return;const m=document.createElement("link");if(m.rel=g?"stylesheet":v,g||(m.as="script"),m.crossOrigin="",m.href=c,u&&m.setAttribute("nonce",u),document.head.appendChild(m),g)return new Promise((b,S)=>{m.addEventListener("load",b),m.addEventListener("error",()=>S(new Error(`Unable to preload CSS for ${c}`)))})}))}function r(s){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=s,window.dispatchEvent(i),!i.defaultPrevented)throw s}return t.then(s=>{for(const i of s||[])i.status==="rejected"&&r(i.reason);return l().catch(r)})};function o(e,l={},n=[]){const a=document.createElement(e);return Object.entries(l).forEach(([t,r])=>{t==="style"&&typeof r=="object"?Object.assign(a.style,r):t.startsWith("on")&&typeof r=="function"?a.addEventListener(t.slice(2).toLowerCase(),r):a.setAttribute(t,r)}),(Array.isArray(n)?n:[n]).forEach(t=>{typeof t=="string"?a.appendChild(document.createTextNode(t)):t&&a.appendChild(t)}),a}let d=null,f=null;async function h(){return d&&d.loaded?d:f||(f=(async()=>{const e="****************ldiQ";try{console.log("[Auth] Initializing Clerk SDK...");let l;try{l=(await A(()=>import("./clerk-DCyhpxcZ.js"),[])).Clerk,console.log("[Auth] Using Clerk SDK from npm package")}catch{if(console.log("[Auth] Failed to import from package, trying CDN fallback"),!window.Clerk){const i=document.createElement("script");i.src="https://cdn.jsdelivr.net/npm/@clerk/clerk-js@5/dist/clerk.browser.js",i.onload=()=>console.log("[Auth] Clerk SDK loaded from CDN"),document.head.appendChild(i),await new Promise(u=>{i.onload=u})}l=window.Clerk}if(!l)throw new Error("Clerk SDK not available");d=new l(e),await d.load();const n=window.location.hostname!=="localhost",a=n?15:10,t=n?150:100;let r=0;for(;!d.loaded&&r<a;)console.log("[Auth] Waiting for Clerk to finish loading...",{retries:r,environment:n?"production":"development"}),await new Promise(s=>setTimeout(s,t)),r++;return console.log("[Auth] Clerk SDK initialized successfully",{loaded:d.loaded,hasSession:!!d.session,hasUser:!!d.user}),d.addListener(s=>{var i;console.log("[Auth] Clerk state changed:",{isSignedIn:!!s.user,userId:(i=s.user)==null?void 0:i.id,hasSession:!!s.session}),window.gammaAuthStateChangeHandler&&window.gammaAuthStateChangeHandler()}),d}catch(l){return console.error("[Auth] Failed to initialize Clerk SDK:",l),f=null,null}})(),f)}async function x(){var t,r;const e=await h();if(!e)return null;if(!e.loaded)return console.log("[Auth] Clerk SDK still loading, cannot determine auth state yet"),null;if(console.log("[Auth] Checking authentication state",{loaded:e.loaded,hasUser:!!e.user,hasSession:!!e.session,sessionId:(t=e.session)==null?void 0:t.id}),e.user&&e.session){const s=e.user,i=await e.session.getToken();i&&localStorage.setItem("clerk_session_token",i);try{console.log("[Auth] User authenticated with Clerk, bootstrapping from database...");const u=await fetch("/api/auth/bootstrap",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${i}`}});if(u.ok){const{user:c}=await u.json();return localStorage.setItem("user_id",c.id),localStorage.setItem("user_email",c.email),localStorage.setItem("user_name",c.name||""),localStorage.setItem("user_clerk_id",c.clerkId),console.log("[Auth] User bootstrapped from database:",c),{id:c.id,email:c.email,name:c.name,clerkId:c.clerkId,source:"database"}}else console.error("[Auth] Failed to bootstrap user from database")}catch(u){console.error("[Auth] Error bootstrapping user:",u)}return{email:(r=s.emailAddresses[0])==null?void 0:r.emailAddress,name:`${s.firstName||""} ${s.lastName||""}`.trim()||"User",clerkId:s.id,source:"clerk"}}const l=localStorage.getItem("user_id"),n=localStorage.getItem("user_email");localStorage.getItem("user_name");const a=localStorage.getItem("clerk_session_token");return localStorage.getItem("user_clerk_id"),l&&n&&a&&(console.log("[Auth] Found stored session data but Clerk has no active session - clearing stale data"),["clerk_session_token","user_id","user_email","user_name","user_clerk_id"].forEach(i=>localStorage.removeItem(i))),null}async function k(){const e=await h();if(e)try{await e.openSignIn()}catch(l){console.error("[Auth] Sign-in failed:",l)}}async function _(){const e=await h();if(["clerk_session_token","clerk_jwt_token","device_token","device_id","pairing_code","user_email","user_name","user_id","user_clerk_id","gamma_auth_state"].forEach(n=>localStorage.removeItem(n)),e)try{await e.signOut(),console.log("[Auth] Successfully signed out from Clerk")}catch(n){console.error("[Auth] Error during Clerk sign-out:",n)}window.location.href=window.location.origin}async function P(e){if(!await x())return console.error("[Pairing] No authenticated user found"),!1;try{const n=await fetch("/api/devices/link",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("clerk_session_token")}`},body:JSON.stringify({code:e})});if(n.ok){const a=await n.json();return console.log("[Pairing] Device linked successfully:",a),!0}else{const a=await n.text();return console.error("[Pairing] Device linking failed:",a),!1}}catch(n){return console.error("[Pairing] Error during device linking:",n),!1}}async function y(){const e=document.getElementById("app");if(!e)return;const n=new URLSearchParams(window.location.search).get("code");e.innerHTML='<div style="text-align: center; padding: 20px;">Loading authentication...</div>';try{const a=await h();if(!a){e.innerHTML='<div style="text-align: center; color: red; padding: 20px;">Failed to initialize authentication. Please refresh the page.</div>';return}if(!a.loaded){console.log("[Dashboard] Clerk still loading, showing loading state..."),e.innerHTML='<div style="text-align: center; padding: 20px;">Restoring session...</div>';const s=window.location.hostname==="localhost"?50:30,i=window.location.hostname==="localhost"?100:200;window.clerkLoadRetryCount||(window.clerkLoadRetryCount=0),window.clerkLoadRetryCount++,window.clerkLoadRetryCount<s?setTimeout(()=>y(),i):(console.error("[Dashboard] Clerk failed to load after maximum retries"),e.innerHTML='<div style="text-align: center; color: red; padding: 20px;">Authentication failed to load. Please refresh the page.</div>');return}window.clerkLoadRetryCount=0;const t=await x(),r=!!t;if(console.log("[Dashboard] Render state:",{isAuthenticated:r,pairingCode:n,user:t,clerkLoaded:a.loaded,clerkSession:!!a.session}),e.innerHTML="",n&&!r){console.log("[Dashboard] Need authentication for device pairing"),e.appendChild(o("div",{style:{maxWidth:"600px",margin:"0 auto",padding:"40px 20px",fontFamily:"system-ui, -apple-system, sans-serif"}},[o("h1",{style:{fontSize:"2.5rem",marginBottom:"1rem",textAlign:"center"}},"Device Pairing"),o("p",{style:{fontSize:"1.2rem",color:"#666",textAlign:"center",marginBottom:"2rem"}},"Please sign in to connect your device to your Gamma account."),o("div",{style:{textAlign:"center"}},[o("button",{onclick:k,style:{backgroundColor:"#007bff",color:"white",padding:"12px 24px",border:"none",borderRadius:"6px",fontSize:"16px",cursor:"pointer"}},"Sign In with Clerk")])]));return}if(n&&r){console.log("[Dashboard] Processing device pairing..."),e.appendChild(o("div",{style:{maxWidth:"600px",margin:"0 auto",padding:"40px 20px",fontFamily:"system-ui, -apple-system, sans-serif"}},[o("h1",{style:{fontSize:"2.5rem",marginBottom:"1rem",textAlign:"center"}},"Connecting Device..."),o("div",{style:{textAlign:"center",marginBottom:"2rem"}},[o("div",{style:{fontSize:"1.2rem",color:"#666"}},"Linking your extension to your account...")])])),await P(n)?(e.innerHTML="",e.appendChild(o("div",{style:{maxWidth:"600px",margin:"0 auto",padding:"40px 20px",fontFamily:"system-ui, -apple-system, sans-serif"}},[o("div",{style:{textAlign:"center"}},[o("div",{style:{fontSize:"3rem",marginBottom:"1rem"}},"✅"),o("h1",{style:{fontSize:"2.5rem",marginBottom:"1rem",color:"#28a745"}},"Device Connected Successfully!"),o("p",{style:{fontSize:"1.2rem",color:"#666",marginBottom:"2rem"}},"Your extension is now connected to your account. You can close this window and return to the extension."),o("button",{onclick:()=>window.close(),style:{backgroundColor:"#28a745",color:"white",padding:"12px 24px",border:"none",borderRadius:"6px",fontSize:"16px",cursor:"pointer"}},"Close Window")])]))):(e.innerHTML="",e.appendChild(o("div",{style:{maxWidth:"600px",margin:"0 auto",padding:"40px 20px",fontFamily:"system-ui, -apple-system, sans-serif"}},[o("div",{style:{textAlign:"center"}},[o("div",{style:{fontSize:"3rem",marginBottom:"1rem"}},"❌"),o("h1",{style:{fontSize:"2.5rem",marginBottom:"1rem",color:"#dc3545"}},"Connection Failed"),o("p",{style:{fontSize:"1.2rem",color:"#666",marginBottom:"2rem"}},"Unable to connect your device. Please try again or contact support."),o("button",{onclick:()=>window.location.reload(),style:{backgroundColor:"#007bff",color:"white",padding:"12px 24px",border:"none",borderRadius:"6px",fontSize:"16px",cursor:"pointer"}},"Try Again")])])));return}r?e.appendChild(o("div",{style:{maxWidth:"800px",margin:"0 auto",padding:"40px 20px",fontFamily:"system-ui, -apple-system, sans-serif"}},[o("header",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"3rem",borderBottom:"1px solid #e9ecef",paddingBottom:"1rem"}},[o("h1",{style:{fontSize:"2rem",margin:"0"}},"Gamma Timetables"),o("div",{style:{display:"flex",alignItems:"center",gap:"1rem"}},[o("span",{style:{fontSize:"0.9rem",color:"#666"}},`Welcome, ${t.name||t.email}`),o("button",{onclick:_,style:{backgroundColor:"#dc3545",color:"white",padding:"8px 16px",border:"none",borderRadius:"4px",fontSize:"14px",cursor:"pointer"}},"Sign Out")])]),o("main",{},[o("div",{style:{textAlign:"center",padding:"3rem 0"}},[o("h2",{style:{fontSize:"1.8rem",marginBottom:"1rem"}},"Your Presentations"),o("p",{style:{fontSize:"1.1rem",color:"#666",marginBottom:"2rem"}},"Manage your Gamma presentation timetables across all your devices."),o("div",{style:{padding:"2rem",backgroundColor:"#f8f9fa",borderRadius:"8px",color:"#666"}},[o("p",{},"Presentation sync features will be available soon.")])])])])):e.appendChild(o("div",{style:{maxWidth:"600px",margin:"0 auto",padding:"40px 20px",fontFamily:"system-ui, -apple-system, sans-serif"}},[o("div",{style:{textAlign:"center"}},[o("h1",{style:{fontSize:"3rem",marginBottom:"1rem"}},"Gamma Timetables"),o("p",{style:{fontSize:"1.3rem",color:"#666",marginBottom:"3rem"}},"Transform your Gamma presentations into structured timetables with cloud sync across all your devices."),o("button",{onclick:k,style:{backgroundColor:"#007bff",color:"white",padding:"16px 32px",border:"none",borderRadius:"8px",fontSize:"18px",cursor:"pointer"}},"Get Started")])]))}catch(a){console.error("[Dashboard] Error rendering dashboard:",a),e.innerHTML='<div style="text-align: center; color: red; padding: 20px;">Error loading dashboard. Please refresh the page.</div>'}}window.gammaAuthStateChangeHandler=y;document.addEventListener("DOMContentLoaded",y);document.readyState==="loading"||y();
