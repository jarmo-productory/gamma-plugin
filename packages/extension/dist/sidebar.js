import{l as Z,s as ee,d as te,S as G,o as ne}from"./index-Chgmd4Bq.js";function W(o,e={}){const{startTime:t="09:00",defaultDuration:n=5,existingItems:s=[]}=e,a=new Date(`1970-01-01T${t}:00`);let r=0;const i=o.map(u=>{const l=s.find(p=>p.id===u.id),h=l?l.duration:n,d=new Date(a);a.setMinutes(a.getMinutes()+h);const c=new Date(a);return r+=h,{id:u.id,title:u.title,content:u.content,startTime:d.toTimeString().slice(0,5),endTime:c.toTimeString().slice(0,5),duration:h}});return{startTime:t,items:i,totalDuration:r}}function oe(o,e,t=!1){const n=document.createElement("a");if(n.setAttribute("download",o),n.style.visibility="hidden",document.body.appendChild(n),t)n.href=e;else{const s=new Blob([e],{type:"text/csv;charset=utf-8;"});n.href=URL.createObjectURL(s)}n.click(),document.body.removeChild(n)}function ae(o){var u;const e=((u=o.items[0])==null?void 0:u.title)||"Course Timetable",t=o.items.map(l=>[l.startTime,l.endTime,l.duration,l.title]),s=[[e],["Start","End","Duration","Slide title"],...t],a=XLSX.utils.aoa_to_sheet(s);a["!cols"]=[{wch:10},{wch:10},{wch:10},{wch:80}];const r=XLSX.utils.book_new();XLSX.utils.book_append_sheet(r,a,"Timetable");const i=XLSX.write(r,{bookType:"xlsx",type:"array"});return new Blob([i],{type:"application/octet-stream"})}function R(o,e){return ee(o,e)}function se(o){return Z(o)}function K(o,e){return te(o,e)}const M={deviceInfo:"device_info_v1",deviceToken:"device_token_v1"},re=2500,ie=5*60*1e3;class ce{constructor(e){this.storage=e||new G}async getStoredDeviceInfo(){return await this.storage.load(M.deviceInfo)||null}async getStoredToken(){return await this.storage.load(M.deviceToken)||null}async saveDeviceInfo(e){await this.storage.save(M.deviceInfo,e)}async saveToken(e){await this.storage.save(M.deviceToken,e)}async clearToken(){await this.storage.save(M.deviceToken,null)}isExpired(e){const t=Date.parse(e);return Number.isNaN(t)?!0:Date.now()>=t-5e3}async getValidTokenOrRefresh(e){const t=await this.getStoredToken();if(!t)return null;if(!this.isExpired(t.expiresAt))return t;try{const n=await this.refresh(e,t.token);if(n)return n}catch(n){console.warn("[DeviceAuth] token refresh failed:",n)}return null}async registerDevice(e){const t=await fetch(`${e}/api/devices/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({}),credentials:"include"});if(!t.ok)throw new Error(`registerDevice failed: ${t.status}`);const n=await t.json(),s={deviceId:n.deviceId,code:n.code,expiresAt:n.expiresAt};return await this.saveDeviceInfo(s),s}async getOrRegisterDevice(e){const t=await this.getStoredDeviceInfo();return t||this.registerDevice(e)}buildSignInUrl(e,t){const n=new URL(`${e.replace(/\/$/,"")}/`);return n.searchParams.set("source","extension"),n.searchParams.set("code",t),n.toString()}async exchange(e,t,n){const s=await fetch(`${e}/api/devices/exchange`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({deviceId:t,code:n})});if(s.status===404||s.status===425)return null;if(!s.ok)throw new Error(`exchange failed: ${s.status}`);const a=await s.json();return await this.saveToken(a),a}async refresh(e,t){const n=await fetch(`${e}/api/devices/refresh`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({})});if(!n.ok)return null;const s=await n.json();return await this.saveToken(s),s}async authorizedFetch(e,t,n){const s=await this.getValidTokenOrRefresh(e);if(!s)throw new Error("not_authenticated");const a=t.startsWith("http")?t:`${e.replace(/\/$/,"")}${t}`,r=new Headers((n==null?void 0:n.headers)||{});return r.set("Authorization",`Bearer ${s.token}`),r.set("Content-Type",r.get("Content-Type")||"application/json"),fetch(a,{...n,headers:r})}async pollExchangeUntilLinked(e,t,n,s){const a=(s==null?void 0:s.intervalMs)??re,r=(s==null?void 0:s.maxWaitMs)??ie,i=Date.now();for(;;){if(Date.now()-i>r)return null;try{const u=await this.exchange(e,t,n);if(u)return u}catch(u){console.warn("[DeviceAuth] exchange error (will retry):",u)}await new Promise(u=>setTimeout(u,a))}}}const A=new ce;class B{constructor(){this.storageKey="gamma_auth_state"}static getInstance(){return B.instance||(B.instance=new B),B.instance}getState(){if(typeof window>"u")return{state:"LOGGED_OUT"};const e=localStorage.getItem(this.storageKey);if(!e)return{state:"LOGGED_OUT"};try{const t=JSON.parse(e);return t.deviceToken&&t.userId?t.state="AUTHENTICATED":t.pairingCode&&t.deviceId?t.state="PAIRING_IN_PROGRESS":t.deviceId?t.state="DEVICE_REGISTERED":t.state="LOGGED_OUT",t}catch{return{state:"LOGGED_OUT"}}}setState(e){if(typeof window>"u")return;const n={...this.getState(),...e};n.deviceToken&&n.userId?n.state="AUTHENTICATED":n.pairingCode&&n.deviceId?n.state="PAIRING_IN_PROGRESS":n.deviceId?n.state="DEVICE_REGISTERED":n.state="LOGGED_OUT",localStorage.setItem(this.storageKey,JSON.stringify(n)),window.dispatchEvent(new CustomEvent("gamma-auth-changed",{detail:n}))}isAuthenticated(){const{state:e}=this.getState();return e==="AUTHENTICATED"}logout(){typeof window>"u"||(localStorage.removeItem(this.storageKey),localStorage.removeItem("clerk_session_token"),localStorage.removeItem("clerk_jwt_token"),localStorage.removeItem("device_id"),localStorage.removeItem("device_token"),localStorage.removeItem("pairing_code"),window.dispatchEvent(new CustomEvent("gamma-auth-logout")),this.setState({state:"LOGGED_OUT"}))}resetForTesting(){this.logout(),typeof window<"u"&&(sessionStorage.clear(),document.cookie.split(";").forEach(e=>{document.cookie=e.replace(/^ +/,"").replace(/=.*/,"=;expires="+new Date().toUTCString()+";path=/")})),console.log("[Auth] Complete reset for testing completed")}registerDevice(e,t){this.setState({deviceId:e,pairingCode:t,state:t?"PAIRING_IN_PROGRESS":"DEVICE_REGISTERED"})}authenticate(e,t,n,s){this.setState({userId:e,userEmail:t,deviceToken:n,clerkToken:s,state:"AUTHENTICATED"})}}const le=B.getInstance();typeof window<"u"&&(window.gammaAuth=le);var ue={};class de{constructor(e){this.clerk=null,this.listeners=new Set,this.authState={isAuthenticated:!1,user:null,session:null,lastChecked:new Date().toISOString()},this.storage=e||new G}async initialize(){console.log("[AuthManager] initialize() called");const e=ue.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY;if(!e){console.error("[AuthManager] Clerk publishable key not found.");return}try{this.clerk=new ne(e),console.log("[AuthManager] Clerk instance created"),await this.clerk.load(),console.log("[AuthManager] Clerk loaded"),this.clerk.addListener(t=>{this.handleClerkStateChange(t)}),this.updateAuthState(),console.log("[AuthManager] Initialization complete")}catch(t){console.error("[AuthManager] Failed to load Clerk:",t),this.clerk=null}}updateAuthState(){var n,s,a;if(!this.clerk)return;const e=this.clerk.user,t=this.clerk.session;this.authState={isAuthenticated:!!e&&!!t,user:e?{id:e.id,email:((n=e.primaryEmailAddress)==null?void 0:n.emailAddress)||"",name:e.fullName||"",createdAt:((s=e.createdAt)==null?void 0:s.toISOString())||new Date().toISOString()}:null,session:t?{userId:t.user.id,token:((a=t.lastActiveToken)==null?void 0:a.getRawString())||"",expiresAt:t.expireAt.toISOString(),isActive:t.status==="active"}:null,lastChecked:new Date().toISOString()},this.emitAuthEvent({type:this.authState.isAuthenticated?"login":"logout",user:this.authState.user,timestamp:new Date().toISOString()})}handleClerkStateChange(e){console.log("[AuthManager] Clerk state changed:",e),this.updateAuthState()}async isAuthenticated(){const e=await A.getStoredToken();return e&&e.token?!0:this.authState.isAuthenticated}async getCurrentUser(){return this.authState.user}async getAuthState(){return{...this.authState}}async login(){console.log("[AuthManager] login() delegated to sidebar pairing flow.")}async logout(){await A.clearToken(),this.updateAuthState()}async getUserPreferences(){const e={theme:"auto",autoSync:!1,syncInterval:30,exportFormat:"xlsx",notifications:!1};try{const t=await this.storage.load("user_preferences");if(t&&typeof t=="object")return{...e,...t}}catch(t){console.warn("[AuthManager] Could not load user preferences:",t)}return e}async updateUserPreferences(e){try{const n={...await this.getUserPreferences(),...e};await this.storage.save("user_preferences",n),this.emitAuthEvent({type:"auth_check",timestamp:new Date().toISOString()})}catch(t){throw console.error("[AuthManager] Could not update user preferences:",t),t}}addEventListener(e){this.listeners.add(e)}removeEventListener(e){this.listeners.delete(e)}emitAuthEvent(e){this.listeners.forEach(t=>{try{t(e)}catch(n){console.error("[AuthManager] Error in auth event listener:",n)}})}}const v=new de,H={authentication:!0,userProfiles:!1,sessionManagement:!1,cloudSync:!0,autoSync:!1,syncQueue:!1,conflictResolution:!1,realTimeSync:!1,collaborativeEditing:!1,liveUpdates:!1,advancedSearch:!1,dataVersioning:!1,exportHistory:!1,bulkOperations:!1,offlineMode:!0,localStorage:!0,exportFeatures:!0,basicUI:!0,debugMode:!0,loggingEnabled:!0,performanceMetrics:!1},z={environment:"development",apiBaseUrl:"http://localhost:3000",webBaseUrl:"http://localhost:3000",enableAnalytics:!1,logLevel:"debug",maxStorageSize:50,syncIntervalMs:3e4},fe={environment:"production",apiBaseUrl:"https://productory-powerups.netlify.app",webBaseUrl:"https://productory-powerups.netlify.app",enableAnalytics:!1,logLevel:"info",maxStorageSize:50,syncIntervalMs:3e4};function ge(){return typeof __BUILD_ENV__<"u"&&__BUILD_ENV__==="production"?fe:z}const q=ge(),j={theme:"auto",language:"en",exportFormat:"xlsx",notifications:!1,autoSave:!0,syncOnStartup:!0};class he{constructor(e){this.config=null,this.listeners=new Set,this.storage=e||new G}async initialize(){try{const e=await this.storage.load("app_config_v3");e&&this.isValidConfig(e)?(this.config=this.applyMigrationsAndMergeDefaults(e),await this.saveConfig(),console.log("[ConfigManager] Loaded existing configuration (with migrations/defaults applied)")):(this.config=this.createDefaultConfig(),await this.saveConfig(),console.log("[ConfigManager] Created default configuration")),this.notifyListeners()}catch(e){console.error("[ConfigManager] Failed to initialize:",e),this.config=this.createDefaultConfig()}}getConfig(){return this.config?{...this.config}:this.createDefaultConfig()}isFeatureEnabled(e){return this.getConfig().features[e]||!1}async updateFeatureFlags(e){const t=this.getConfig(),n={},s=["debugMode","loggingEnabled","performanceMetrics"];for(const[a,r]of Object.entries(e))s.includes(a)&&typeof r=="boolean"?n[a]=r:s.includes(a)?console.warn(`[ConfigManager] Feature '${a}' must be boolean value`):console.warn(`[ConfigManager] Feature '${a}' cannot be modified in Sprint 0`);t.features={...t.features,...n},t.lastUpdated=new Date().toISOString(),this.config=t,await this.saveConfig(),this.notifyListeners()}async updateUserConfig(e){const t=this.getConfig();t.user={...t.user,...e},t.lastUpdated=new Date().toISOString(),this.config=t,await this.saveConfig(),this.notifyListeners()}async updateEnvironmentConfig(e){const t=this.getConfig(),n={},s=["logLevel","maxStorageSize","enableAnalytics","syncIntervalMs"];for(const[a,r]of Object.entries(e))s.includes(a)?n[a]=r:console.warn(`[ConfigManager] Environment setting '${a}' cannot be modified in Sprint 0`);t.environment={...t.environment,...n},t.lastUpdated=new Date().toISOString(),this.config=t,await this.saveConfig(),this.notifyListeners()}getUIFeatureStatus(){const e=this.getConfig(),t={};for(const[n,s]of Object.entries(e.features)){let a=s?"Feature enabled":"Feature disabled";s||(["authentication","userProfiles","sessionManagement"].includes(n)?a="Available in Sprint 1":["cloudSync","autoSync","syncQueue","conflictResolution"].includes(n)?a="Available in Sprint 2":["realTimeSync","collaborativeEditing","liveUpdates"].includes(n)?a="Available in Sprint 3":["advancedSearch","dataVersioning","exportHistory","bulkOperations"].includes(n)&&(a="Available in Sprint 4")),t[n]={enabled:s,reason:a}}return t}addConfigListener(e){this.listeners.add(e)}removeConfigListener(e){this.listeners.delete(e)}async resetToDefaults(){this.config=this.createDefaultConfig(),await this.saveConfig(),this.notifyListeners(),console.log("[ConfigManager] Configuration reset to defaults")}getFeatureConfig(e){const t=this.getConfig();return{storage:{maxSize:t.environment.maxStorageSize,enableSync:t.features.cloudSync,localOnly:!t.features.cloudSync},auth:{enabled:t.features.authentication,sessionTimeout:36e5,requireAuth:!1},sync:{enabled:t.features.autoSync,interval:t.environment.syncIntervalMs,queueEnabled:t.features.syncQueue},ui:{theme:t.user.theme,language:t.user.language,notifications:t.user.notifications},export:{enabled:t.features.exportFeatures,defaultFormat:t.user.exportFormat,historyEnabled:t.features.exportHistory}}[e]||null}createDefaultConfig(){return console.log("[ConfigManager] Creating a new default configuration object."),{features:{...H},environment:{...q},user:{...j},version:"0.0.7",lastUpdated:new Date().toISOString()}}applyMigrationsAndMergeDefaults(e){const t={...e,features:{...H,...e.features},environment:{...q,...e.environment},user:{...j,...e.user},version:e.version||"0.0.7",lastUpdated:new Date().toISOString()};return t.features.authentication||(t.features.authentication=!0),t}async saveConfig(){if(this.config)try{await this.storage.save("app_config_v3",this.config)}catch(e){throw console.error("[ConfigManager] Failed to save configuration:",e),e}}isValidConfig(e){return e!==null&&typeof e=="object"&&"features"in e&&"environment"in e&&"user"in e&&"version"in e&&"lastUpdated"in e}notifyListeners(){this.config&&this.listeners.forEach(e=>{try{e(this.config)}catch(t){console.error("[ConfigManager] Error in config listener:",t)}})}}const E=new he,me={enableCloudSync:!0,syncDebounceMs:500,maxRetries:3,retryDelayMs:1e3,dataVersion:1};class ye{constructor(e={}){this.syncQueue=[],this.config={...me,...e}}async save(e,t){try{const n={version:this.config.dataVersion,data:t,timestamp:new Date,presentation_url:this.extractPresentationUrl(e)};await this.chromeStorageSave(e,n),this.config.enableCloudSync&&this.addToSyncQueue(e,t,"save")}catch(n){throw console.error("[StorageManager] Save failed:",n),n}}async load(e){try{const t=await this.chromeStorageLoad(e);if(!t)return;if(!this.isVersionedData(t))return console.log("[StorageManager] Loading legacy data for key:",e),t;const n=t;return n.version!==this.config.dataVersion&&console.log(`[StorageManager] Data version mismatch for key ${e}: ${n.version} vs ${this.config.dataVersion}`),n.data}catch(t){throw console.error("[StorageManager] Load failed:",t),t}}async remove(e){try{await this.chromeStorageRemove(e),this.config.enableCloudSync&&this.addToSyncQueue(e,null,"remove")}catch(t){throw console.error("[StorageManager] Remove failed:",t),t}}async clear(){try{await this.chromeStorageClear(),this.syncQueue=[]}catch(e){throw console.error("[StorageManager] Clear failed:",e),e}}async retryWithBackoff(e,t,n=()=>!0){let s;for(let a=1;a<=this.config.maxRetries;a++)try{return await e()}catch(r){if(s=r,!n(r))throw r;if(a===this.config.maxRetries)throw console.error(`[StorageManager] ${t} failed after ${a} attempts:`,r),r;const i=this.config.retryDelayMs*Math.pow(2,a-1)+Math.random()*1e3;console.warn(`[StorageManager] ${t} attempt ${a} failed, retrying in ${Math.round(i)}ms:`,r),await new Promise(u=>setTimeout(u,i))}throw s}isRetriableNetworkError(e){return e.status===401||e.status===403||e.status>=400&&e.status<500&&e.status!==429?!1:e.name==="TypeError"||e.status>=500||e.status===429||!e.status}async syncToCloud(e,t,n={}){if(!this.config.enableCloudSync)return{success:!1,error:"Cloud sync disabled"};const{title:s,apiBaseUrl:a,deviceAuth:r}=n;if(!r)return{success:!1,error:"Authentication required"};if(!a)return{success:!1,error:"API base URL required"};try{return await this.retryWithBackoff(async()=>{if(!await r.getValidTokenOrRefresh(a)){const c=new Error("Not authenticated");throw c.status=401,c}const u=Array.isArray(t==null?void 0:t.items)?t.items.map(c=>{const p=(c==null?void 0:c.id)!==null&&(c==null?void 0:c.id)!==void 0?String(c.id):"",I=(c==null?void 0:c.title)!==null&&(c==null?void 0:c.title)!==void 0?String(c.title):"",D=Number(c==null?void 0:c.duration),f=typeof(c==null?void 0:c.startTime)=="string"?c.startTime.slice(0,5):c==null?void 0:c.startTime,m=typeof(c==null?void 0:c.endTime)=="string"?c.endTime.slice(0,5):c==null?void 0:c.endTime;return{id:p,title:I,duration:Number.isFinite(D)?D:0,startTime:f,endTime:m,content:c==null?void 0:c.content}}).filter(c=>c.id&&c.title&&typeof c.duration=="number"):[],l={presentationUrl:e,title:s||t.title||"Untitled Presentation",timetableData:{title:t.title,items:u,startTime:t.startTime,totalDuration:t.totalDuration,lastModified:new Date().toISOString()}},h=await r.authorizedFetch(a,"/api/presentations/save",{method:"POST",body:JSON.stringify(l)});if(!h.ok){const c=await h.json().catch(()=>({})),p=new Error(c.error||`API error: ${h.status}`);throw p.status=h.status,p}const d=await h.json();return console.log("[StorageManager] Successfully synced to cloud:",e),{success:!0,data:d}},"Cloud sync to save",this.isRetriableNetworkError.bind(this))}catch(i){return console.error("[StorageManager] Cloud sync failed:",i),{success:!1,error:i instanceof Error?i.message:"Unknown error"}}}async syncFromCloud(e,t={}){if(!this.config.enableCloudSync)return{success:!1,error:"Cloud sync disabled"};const{apiBaseUrl:n,deviceAuth:s}=t;if(!s)return{success:!1,error:"Authentication required"};if(!n)return{success:!1,error:"API base URL required"};try{return await this.retryWithBackoff(async()=>{var u;if(!await s.getValidTokenOrRefresh(n)){const l=new Error("Not authenticated");throw l.status=401,l}const r=await s.authorizedFetch(n,`/api/presentations/get?url=${encodeURIComponent(e)}`);if(r.status===404){const l=new Error("Presentation not found in cloud");throw l.status=404,l}if(!r.ok){const l=await r.json().catch(()=>({})),h=new Error(l.error||`API error: ${r.status}`);throw h.status=r.status,h}const i=await r.json();return(u=i==null?void 0:i.timetableData)!=null&&u.items&&Array.isArray(i.timetableData.items)&&(i.timetableData.items=i.timetableData.items.map(l=>({...l,id:String((l==null?void 0:l.id)??""),title:String((l==null?void 0:l.title)??""),duration:Number((l==null?void 0:l.duration)??0)}))),console.log("[StorageManager] Successfully synced from cloud:",e),{success:!0,data:i.timetableData}},"Cloud sync from load",this.isRetriableNetworkError.bind(this))}catch(a){return console.error("[StorageManager] Cloud sync from failed:",a),{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}async syncPresentationsList(e={}){if(!this.config.enableCloudSync)return{success:!1,error:"Cloud sync disabled"};const{apiBaseUrl:t,deviceAuth:n,limit:s=50,offset:a=0,sortBy:r="updated_at"}=e;if(!n)return{success:!1,error:"Authentication required"};if(!t)return{success:!1,error:"API base URL required"};try{return await this.retryWithBackoff(async()=>{if(!await n.getValidTokenOrRefresh(t)){const d=new Error("Not authenticated");throw d.status=401,d}const u=new URL("http://localhost").searchParams;u.set("limit",s.toString()),u.set("offset",a.toString()),u.set("sortBy",r);const l=await n.authorizedFetch(t,`/api/presentations/list?${u.toString()}`);if(!l.ok){const d=await l.json().catch(()=>({})),c=new Error(d.error||`API error: ${l.status}`);throw c.status=l.status,c}const h=await l.json();return console.log("[StorageManager] Successfully retrieved presentations list from cloud"),{success:!0,data:h}},"Cloud presentations list",this.isRetriableNetworkError.bind(this))}catch(i){return console.error("[StorageManager] Presentations list sync failed:",i),{success:!1,error:i instanceof Error?i.message:"Unknown error"}}}async autoSyncIfAuthenticated(e,t,n={}){if(!this.config.enableCloudSync)return;const{deviceAuth:s,apiBaseUrl:a}=n;if(!(!s||!a))try{if(!await s.getValidTokenOrRefresh(a))return;const i=await this.syncToCloud(e,t,n);i.success?console.log("[StorageManager] Auto-sync successful"):console.warn("[StorageManager] Auto-sync failed:",i.error)}catch(r){console.warn("[StorageManager] Auto-sync error (non-critical):",r)}}chromeStorageSave(e,t){return new Promise((n,s)=>{chrome.storage.local.set({[e]:t},()=>{if(chrome.runtime.lastError)return s(chrome.runtime.lastError);n()})})}chromeStorageLoad(e){return new Promise((t,n)=>{chrome.storage.local.get(e,s=>{if(chrome.runtime.lastError)return n(chrome.runtime.lastError);t(s[e])})})}chromeStorageRemove(e){return new Promise((t,n)=>{chrome.storage.local.remove(e,()=>{if(chrome.runtime.lastError)return n(chrome.runtime.lastError);t()})})}chromeStorageClear(){return new Promise((e,t)=>{chrome.storage.local.clear(()=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);e()})})}isVersionedData(e){return e&&typeof e=="object"&&"version"in e&&"data"in e&&"timestamp"in e}extractPresentationUrl(e){const t=e.match(/^timetable-(.+)$/);return t?t[1]:void 0}addToSyncQueue(e,t,n){const s={key:e,data:t,operation:n,timestamp:new Date,attempts:0};this.syncQueue.push(s),this.scheduleSyncProcess()}scheduleSyncProcess(){this.syncTimer&&clearTimeout(this.syncTimer),this.syncTimer=setTimeout(()=>{this.processSyncQueue()},this.config.syncDebounceMs)}async processSyncQueue(){if(!(!this.config.enableCloudSync||this.syncQueue.length===0)){console.log(`[StorageManager] Processing sync queue: ${this.syncQueue.length} items`);for(const e of this.syncQueue)console.log("[StorageManager] Sync queue item:",e);this.syncQueue=[]}}getSyncQueueStatus(){return{count:this.syncQueue.length,items:[...this.syncQueue]}}updateConfig(e){this.config={...this.config,...e}}}const x=new ye;async function pe(o,e,t={}){if(await x.save(o,e),t.enableAutoSync!==!1&&t.deviceAuth&&t.apiBaseUrl){const n=x.extractPresentationUrl(o);n&&await x.autoSyncIfAuthenticated(n,e,{title:t.title,apiBaseUrl:t.apiBaseUrl,deviceAuth:t.deviceAuth})}}console.log("[SIDEBAR] Script loaded");const Se=typeof __APP_VERSION__<"u"?__APP_VERSION__:"DEV";let _=!1,L=[],g=null,T=null,C=null,we=!1,be=!1;function ve(o){if(!g){console.log("[SIDEBAR] No current timetable, generating a new one.");const s=W(o);U(s),$();return}console.log("[SIDEBAR] Reconciling new slide data with existing timetable.");const e=[],t=new Map(g.items.map(s=>[s.id,s]));for(const s of o){const a=t.get(s.id);a?e.push({...a,title:s.title,content:s.content}):e.push({...s,duration:5})}g.items=e;const n=V(g);U(n),$()}const Ee=async(o,e)=>{var n;if(console.log(`[SIDEBAR] updateUIWithNewSlides called for tab ${e} with`,(o==null?void 0:o.length)||0,"slides"),L=o||[],o.length===0){document.getElementById("sidebar-main").innerHTML="<p>No slides detected in this Gamma presentation.</p>",k(o,"Received: slide-data (empty)");return}const t=(n=o[0])==null?void 0:n.presentationUrl;if(t){if(t!==C){console.log(`[SIDEBAR] Switched to new presentation: ${t}. Loading from storage...`),C=t;const s=`timetable-${t}`;let a=await se(s);const r=E.getConfig();if(r.features.cloudSync&&r.environment.apiBaseUrl)try{const i=await x.syncFromCloud(t,{apiBaseUrl:r.environment.apiBaseUrl,deviceAuth:A});if(i.success&&i.data){console.log("[SIDEBAR] Found cloud version, merging with local...");const u=i.data;!a||u.lastModified&&a.lastModified&&new Date(u.lastModified)>new Date(a.lastModified)?(a=u,await R(s,u),console.log("[SIDEBAR] Using cloud version (newer than local).")):console.log("[SIDEBAR] Using local version (newer than cloud).")}else!i.success&&i.error!=="Presentation not found in cloud"&&console.warn("[SIDEBAR] Cloud sync failed:",i.error)}catch(i){console.warn("[SIDEBAR] Cloud sync error (non-critical):",i)}a?(console.log("[SIDEBAR] Found stored timetable."),g=a):(console.log("[SIDEBAR] No stored timetable, generating a new one..."),g=W(o))}ve(o),k(o,"Rendered: slide-data")}};function Ie(){if(console.log("[SIDEBAR] Connecting to background script..."),T=chrome.runtime.connect({name:"sidebar"}),console.log("[SIDEBAR] Connected to background"),!T){console.error("[SIDEBAR] Failed to create port connection");return}_=!0,k(L,"Connected to background"),T.onMessage.addListener(o=>{if(console.log("[SIDEBAR] Received message from background:",o),o.type==="slide-data")Ee(o.slides,o.tabId);else if(o.type==="gamma-tab-activated")o.tabId,F("Loading timetable..."),T.postMessage({type:"get-slides"});else if(o.type==="wrong-domain")Oe(o.tabUrl);else if(o.type==="connection-status")F(o.message,o.status);else if(o.type==="connection-error")Q(o.message,o.canRetry,o.tabId);else if(o.type==="connection-warning")Pe(o.message);else if(o.type==="show-message"){document.getElementById("sidebar-main").innerHTML=`<p>${o.message}</p>`;const e=document.getElementById("timetable-title");e&&(e.textContent="Productory Powerups for Gamma");const t=document.getElementById("duration-badge");t&&(t.textContent="0h 0m")}else o.type==="error"&&(console.error("[SIDEBAR] Error from background:",o.message),Q(o.message,!1))}),T.onDisconnect.addListener(()=>{T=null,_=!1,console.log("[SIDEBAR] Disconnected from background script."),k(L,"Disconnected")})}function Ae(o){let e="";return o.forEach(t=>{switch(t.type){case"paragraph":e+=`<p>${t.text}</p>`;break;case"image":e+=`<img src="${t.text}" class="thumbnail-img">`;break;case"link":e+=`<a href="${t.text}" target="_blank" class="content-link">${t.text}</a>`;break;case"list_item":e+=`<p>${t.text}</p>`,t.subItems&&t.subItems.length>0&&(e+='<ul class="sub-items-list">',t.subItems.forEach(n=>{e+=`<li class="sub-item">${n}</li>`}),e+="</ul>");break}}),e}function Ce(o,e){const t=document.createElement("div");t.className="time-input-container";const[n,s]=o.startTime.split(":"),a=document.createElement("input");a.type="text",a.className="time-input-segment",a.value=n,a.maxLength=2,a.placeholder="00",a.inputMode="numeric";const r=document.createElement("span");r.className="time-input-separator",r.textContent=":";const i=document.createElement("input");i.type="text",i.className="time-input-segment",i.value=s,i.maxLength=2,i.placeholder="00",i.inputMode="numeric";let u=!1;const l=()=>{const f=a.value.trim(),m=i.value.trim();if(f&&m){const y=parseInt(f,10),S=parseInt(m,10);if(!isNaN(y)&&!isNaN(S)&&y>=0&&y<=23&&S>=0&&S<=59){const N=`${f.padStart(2,"0")}:${m.padStart(2,"0")}`;e(N)}}},h=K(l,200),d=(f,m)=>{const y=m.target.value,S=y.replace(/[^0-9]/g,"");return S!==y&&(m.target.value=S),S},c=(f,m)=>{if(f.length===2){const y=parseInt(f,10);return!isNaN(y)&&y>=0&&y<=23}return!1},p=()=>{u=!0},I=()=>{u=!1,l()};a.addEventListener("focus",p),a.addEventListener("blur",I),i.addEventListener("focus",p),i.addEventListener("blur",I),a.addEventListener("input",f=>{const m=d(a,f);c(m)&&setTimeout(()=>i.focus(),50),h()}),a.addEventListener("keydown",f=>{if(f.key==="ArrowUp"||f.key==="ArrowDown"){f.preventDefault();const m=parseInt(a.value||"0",10),y=f.key==="ArrowUp"?1:-1,S=Math.max(0,Math.min(23,m+y));a.value=S.toString().padStart(2,"0"),h()}f.key==="Enter"&&(i.focus(),l())}),i.addEventListener("input",f=>{d(i,f),h()}),i.addEventListener("keydown",f=>{if(f.key==="ArrowUp"||f.key==="ArrowDown"){f.preventDefault();const m=parseInt(i.value||"0",10),y=f.key==="ArrowUp"?1:-1,S=Math.max(0,Math.min(59,m+y));i.value=S.toString().padStart(2,"0"),h()}f.key==="Enter"&&(l(),a.focus()),f.key==="Backspace"&&i.value===""&&a.focus()});const D=f=>{f.preventDefault();const y=f.clipboardData.getData("text").trim().match(/^(\d{1,2}):?(\d{2})$/);if(y){const[,S,N]=y,O=parseInt(S,10),P=parseInt(N,10);O>=0&&O<=23&&P>=0&&P<=59&&(a.value=O.toString().padStart(2,"0"),i.value=P.toString().padStart(2,"0"),l())}};return a.addEventListener("paste",D),i.addEventListener("paste",D),t.appendChild(a),t.appendChild(r),t.appendChild(i),t._hasFocus=()=>u,t}function De(o=[],e="none",t={}){const{authFeatureEnabled:n=!1,isAuthenticated:s=!1,userEmail:a=""}=t,{debugMode:r=!1}=t,i=o.length,u=o[0]?JSON.stringify(o[0],null,2):"N/A",l=n,h=l&&r?s?`<div style="margin-top:6px;"><span>Logged in as <strong>${a||"user"}</strong></span> <button id="debug-logout-btn" class="export-btn" style="margin-left:8px;">Logout</button></div>`:'<div style="margin-top:6px;"><button id="debug-login-btn" class="export-btn">Login</button></div>':"";return`
        <strong>Debug Info (v${Se})</strong><br>
        Auth Feature: <strong style="color: ${l?"green":"red"}">${l?"ENABLED":"DISABLED"}</strong><br>
        Slides Detected: <strong>${i}</strong><br>
        Connection Status: <span style="color:${_?"green":"red"};font-weight:bold;">${_?"Connected":"Disconnected"}</span><br>
        Last Action: <span style="font-family: monospace;">${e}</span><br>
        ${h}
        <details><summary>First Slide Preview</summary><pre>${u}</pre></details>
    `}async function k(o=[],e="none"){const t=document.getElementById("debug-info");if(!t)return;const n=E.isFeatureEnabled("authentication"),s=E.isFeatureEnabled("debugMode");let a=!1,r="";if(n)try{a=await v.isAuthenticated();const l=await v.getCurrentUser();r=(l==null?void 0:l.email)||""}catch{}t.innerHTML=De(o,e,{authFeatureEnabled:n,isAuthenticated:a,userEmail:r,debugMode:s});const i=document.getElementById("debug-login-btn");i&&i.addEventListener("click",async()=>{console.log("[SIDEBAR] Debug login button clicked"),await v.login()});const u=document.getElementById("debug-logout-btn");u&&u.addEventListener("click",async()=>{console.log("[SIDEBAR] Debug logout button clicked"),await v.logout()})}function U(o){var h;console.log("[DEBUG] renderTimetable() called - about to recreate login button"),g=o;const e=document.getElementById("sidebar-main");if(!e)return;const t=document.getElementById("timetable-title");t&&(t.textContent=((h=o.items[0])==null?void 0:h.title)||"Course Timetable");const n=document.getElementById("duration-badge");if(n){const d=Math.floor(o.totalDuration/60),c=o.totalDuration%60;n.textContent=`${d}h ${c}m`}const s=document.getElementById("functions-toolbar");if(!s)return;s.innerHTML="";const a=document.createElement("div");a.className="time-display-section";const r=Ce(o,d=>{g.startTime=d;const c=V(g);(!r._hasFocus||!r._hasFocus())&&U(c),$()});a.prepend(r),s.appendChild(a);const i=document.createElement("div");i.className="export-options",i.innerHTML=`
    <button id="export-xlsx-btn" class="export-btn"><img src="/assets/xlsx.svg" alt="Excel">Excel</button>
    <button id="auth-login-toolbar-btn" class="export-btn"><span>🔐</span><span id="auth-toolbar-text">Login</span></button>
  `,s.appendChild(i),e.innerHTML="",i.querySelector("#export-xlsx-btn").onclick=()=>{if(!g)return;const d=ae(g),c=`gamma-timetable-${new Date().toISOString().slice(0,10)}.xlsx`,p=URL.createObjectURL(d);oe(c,p,!0)};const u=i.querySelector("#auth-login-toolbar-btn"),l=i.querySelector("#auth-toolbar-text");if(console.log("[DEBUG] Login button elements found:",{loginToolbarBtn:!!u,loginToolbarText:!!l}),u&&l){console.log("[DEBUG] Attempting to wire auth action...");const d=async()=>{console.log("[DEBUG] wireAuthAction() called");const c=await v.isAuthenticated();console.log("[DEBUG] User authentication status:",c),c?(l.textContent="Logout",u.onclick=async()=>{console.log("[SIDEBAR] Toolbar logout button clicked"),await v.logout(),await d()},console.log("[DEBUG] Logout handler attached")):(l.textContent="Login",u.onclick=async()=>{var p;console.log("[SIDEBAR] Toolbar login button clicked (web-first pairing)");try{const I=E.getConfig(),D=I.environment.apiBaseUrl||"http://localhost:3000",f=I.environment.webBaseUrl||"http://localhost:3000",m=await A.registerDevice(D),y=A.buildSignInUrl(f,m.code);(p=chrome==null?void 0:chrome.tabs)!=null&&p.create?chrome.tabs.create({url:y}):window!=null&&window.open&&window.open(y,"_blank"),await A.pollExchangeUntilLinked(D,m.deviceId,m.code)?(console.log("[SIDEBAR] Device linked; token stored."),await d()):console.warn("[SIDEBAR] Device linking timed out.")}catch(I){console.error("[SIDEBAR] Web-first login failed:",I)}},console.log("[DEBUG] Login handler attached"))};console.log("[DEBUG] About to call wireAuthAction()...");try{d().then(()=>{console.log("[DEBUG] wireAuthAction() completed successfully")}).catch(c=>{console.error("[DEBUG] wireAuthAction() failed:",c)})}catch(c){console.error("[DEBUG] wireAuthAction() failed immediately:",c)}}else console.error("[DEBUG] Login button elements NOT found - cannot wire auth action");o.items.forEach(d=>{const c=document.createElement("div");c.className="slide-item";const p=Ae(d.content);c.innerHTML=`
      <div class="slide-item-header">
        <h3 class="slide-item__title">${d.title}</h3>
        <div class="slide-item-time">
          ${d.startTime} - ${d.endTime}
        </div>
      </div>
      <div class="duration-slider-container">
        <input type="range" min="0" max="60" value="${d.duration}" class="duration-slider" data-slide-id="${d.id}">
        <span class="duration-display">${parseInt(d.duration,10)} min</span>
      </div>
      <div class="slide-item-content">${p}</div>
    `,e.appendChild(c)}),e.querySelectorAll(".duration-slider").forEach(d=>{d.addEventListener("input",Te),d.addEventListener("change",ke)})}const $=K(async()=>{var o;if(g&&C){const e=`timetable-${C}`;try{const t=E.getConfig(),n=t.environment.apiBaseUrl;t.features.cloudSync&&n?(await pe(e,g,{deviceAuth:A,apiBaseUrl:n,title:g.title||((o=L[0])==null?void 0:o.title)||"Untitled Presentation",enableAutoSync:!0}),console.log("[SIDEBAR] Timetable saved with cloud sync.")):(await R(e,g),console.log("[SIDEBAR] Timetable saved (local only)."))}catch(t){console.error("[SIDEBAR] Save failed:",t);try{await R(e,g),console.log("[SIDEBAR] Timetable saved (fallback to local).")}catch(n){console.error("[SIDEBAR] Fallback save also failed:",n)}}}},500);function Te(o){const e=parseInt(o.target.value,10),t=o.target.nextElementSibling;t&&(t.textContent=`${e} min`)}function ke(o){const e=o.target.getAttribute("data-slide-id"),t=parseInt(o.target.value,10),n=g.items.find(a=>a.id===e);if(n){n.duration=t;const a=V(g);U(a),$()}const s=o.target.nextElementSibling;s&&(s.textContent=`${t} min`)}function V(o){const e=new Date(`1970-01-01T${o.startTime}:00`);let t=0;const n=o.items.map(s=>{const a=new Date(e),r=s.duration;e.setMinutes(e.getMinutes()+r);const i=new Date(e);return t+=r,{...s,startTime:a.toTimeString().slice(0,5),endTime:i.toTimeString().slice(0,5)}});return{...o,items:n,totalDuration:t}}document.addEventListener("DOMContentLoaded",async()=>{console.log("[SIDEBAR] DOMContentLoaded fired"),await Be(),Ie()});async function Be(){try{console.log("[SIDEBAR] Initializing infrastructure..."),await E.initialize(),be=!0,console.log("[SIDEBAR] ConfigManager initialized"),await v.initialize(),we=!0,console.log("[SIDEBAR] AuthManager initialized"),console.log("[SIDEBAR] Clerk key present at build:",typeof __HAS_CLERK_KEY__<"u"?__HAS_CLERK_KEY__:"unknown"),await xe(),Le(),k([],"Infrastructure ready"),console.log("[SIDEBAR] Infrastructure ready")}catch(o){console.error("[SIDEBAR] Failed to initialize infrastructure:",o),console.log("[SIDEBAR] Continuing in fallback mode...")}}async function xe(){await X(),await J()}async function X(){const o=document.getElementById("auth-status-bar");if(!o)return;if(!(await E.getConfig()).features.authentication){o.style.display="none";return}o.style.display="none"}function Le(){v.addEventListener(async o=>{console.log("[SIDEBAR] Auth state changed:",o.type),await X(),await J(),k(L,`Auth event: ${o.type}`)})}async function J(){const o=document.getElementById("cloud-sync-section");if(!o)return;const e=E.getConfig();if(!(e.features.cloudSync&&e.environment.apiBaseUrl)){o.style.display="none";return}try{if(await v.isAuthenticated()){o.style.display="block";const s=document.getElementById("save-to-cloud-btn"),a=document.getElementById("load-from-cloud-btn"),r=document.getElementById("auto-sync-toggle");s&&(s.disabled=!1),a&&(a.disabled=!1),r&&(r.disabled=!1),Me(),await $e()}else o.style.display="none"}catch(n){console.warn("[SIDEBAR] Failed to check auth state for sync controls:",n),o.style.display="none"}}function Me(){const o=document.getElementById("save-to-cloud-btn"),e=document.getElementById("load-from-cloud-btn"),t=document.getElementById("auto-sync-toggle");o&&!o.dataset.listenerAttached&&(o.addEventListener("click",Ue),o.dataset.listenerAttached="true"),e&&!e.dataset.listenerAttached&&(e.addEventListener("click",Re),e.dataset.listenerAttached="true"),t&&!t.dataset.listenerAttached&&(t.addEventListener("click",_e),t.dataset.listenerAttached="true")}async function Ue(){var t,n;if(!g||!C){w("No presentation data to save","error");return}const o=document.getElementById("save-to-cloud-btn"),e=(t=o==null?void 0:o.querySelector(".sync-btn-text"))==null?void 0:t.textContent;try{if(w("Saving to cloud...","info"),b("syncing"),o){o.disabled=!0;const i=o.querySelector(".sync-btn-text");i&&(i.textContent="Saving...")}const a=E.getConfig().environment.apiBaseUrl,r=await x.syncToCloud(C,g,{apiBaseUrl:a,deviceAuth:A,title:g.title||((n=L[0])==null?void 0:n.title)||"Untitled Presentation"});if(r.success)w("Successfully saved to cloud!","success"),b("synced"),Y(),console.log("[SIDEBAR] Manual save to cloud successful");else throw new Error(r.error||"Failed to save to cloud")}catch(s){console.error("[SIDEBAR] Manual save to cloud failed:",s),w(`Save failed: ${s.message}`,"error"),b("error")}finally{if(o){o.disabled=!1;const s=o.querySelector(".sync-btn-text");s&&e&&(s.textContent=e)}}}async function Re(){var t;if(!C){w("No presentation to load","error");return}const o=document.getElementById("load-from-cloud-btn"),e=(t=o==null?void 0:o.querySelector(".sync-btn-text"))==null?void 0:t.textContent;try{if(w("Loading from cloud...","info"),b("syncing"),o){o.disabled=!0;const r=o.querySelector(".sync-btn-text");r&&(r.textContent="Loading...")}const s=E.getConfig().environment.apiBaseUrl,a=await x.syncFromCloud(C,{apiBaseUrl:s,deviceAuth:A});if(a.success&&a.data){const r=a.data;if(g&&g.lastModified&&r.lastModified&&new Date(g.lastModified)>new Date(r.lastModified)&&!await Ne(g,r)){w("Load cancelled - keeping local version","info"),b("synced");return}g=r;const u=`timetable-${C}`;await R(u,r),U(r),w("Successfully loaded from cloud!","success"),b("synced"),Y(),console.log("[SIDEBAR] Manual load from cloud successful")}else if(a.error==="Presentation not found in cloud")w("No cloud version found for this presentation","info"),b("synced");else throw new Error(a.error||"Failed to load from cloud")}catch(n){console.error("[SIDEBAR] Manual load from cloud failed:",n),w(`Load failed: ${n.message}`,"error"),b("error")}finally{if(o){o.disabled=!1;const n=o.querySelector(".sync-btn-text");n&&e&&(n.textContent=e)}}}async function _e(){const o=document.getElementById("auto-sync-toggle"),e=o==null?void 0:o.querySelector(".sync-btn-text"),t=o==null?void 0:o.classList.contains("active");t?(o.classList.remove("active"),e&&(e.textContent="Auto Sync: Off"),w("Auto-sync disabled","info")):(o.classList.add("active"),e&&(e.textContent="Auto Sync: On"),w("Auto-sync enabled","success")),console.log("[SIDEBAR] Auto-sync toggled:",!t)}function w(o,e="info"){let t=document.getElementById("sync-status-message");if(!t){t=document.createElement("div"),t.id="sync-status-message",t.className="sync-status-message";const n=document.getElementById("cloud-sync-section");n&&n.appendChild(t)}t.textContent=o,t.className=`sync-status-message ${e}`,t.style.display="block",(e==="success"||e==="info")&&setTimeout(()=>{t&&(t.style.display="none")},3e3)}function b(o){const e=document.getElementById("sync-indicator");if(e)switch(e.className="sync-indicator",e.classList.add(o),o){case"synced":e.textContent="●";break;case"syncing":e.textContent="⟳";break;case"error":e.textContent="⚠";break;case"offline":e.textContent="○";break;default:e.textContent="●"}}function Y(){const o=document.getElementById("last-sync-time");if(o){const t=new Date().toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});o.textContent=`Last sync: ${t}`}}async function $e(){try{const o=await v.isAuthenticated();b(o?"synced":"offline")}catch{b("error")}}async function Ne(o,e){return new Promise(t=>{const n=new Date(o.lastModified||0).toLocaleString(),s=new Date(e.lastModified||0).toLocaleString(),a=`Conflict detected:

Local version: ${n}
Cloud version: ${s}

Which version would you like to keep?`,r=confirm(`${a}

Click OK to use cloud version
Click Cancel to keep local version`);t(r)})}function F(o,e="loading"){const t=document.getElementById("timetable-title");t&&(t.textContent="Productory Powerups for Gamma");const n=document.getElementById("duration-badge");n&&(n.textContent="0h 0m");const s=e==="connecting"?"🔄":"⏳";document.getElementById("sidebar-main").innerHTML=`
    <div class="loading-state">
      <div class="loading-icon">${s}</div>
      <p class="loading-message">${o}</p>
    </div>
  `}function Oe(o){const e=document.getElementById("timetable-title");e&&(e.textContent="Productory Powerups for Gamma");const t=document.getElementById("duration-badge");t&&(t.textContent="");const n=o?new URL(o).hostname:"unknown site";document.getElementById("sidebar-main").innerHTML=`
    <div class="wrong-domain-ui">
      <div class="wrong-domain-header">
        <div class="brand-logo">📊</div>
        <h3>Productory Powerups for Gamma</h3>
        <p class="brand-tagline">Built by educators, for educators</p>
      </div>
      
      <div class="wrong-domain-content">
        <div class="info-section">
          <div class="status-indicator">ℹ️</div>
          <div class="status-text">
            <h4>This extension works on Gamma presentations</h4>
            <p>You're currently on: <strong>${n}</strong></p>
          </div>
        </div>
        
        <div class="action-section">
          <p>To use Productory Powerups:</p>
          <ol class="instructions-list">
            <li>Navigate to <strong>gamma.app</strong></li>
            <li>Open or create a presentation</li>
            <li>Use the extension to generate timetables</li>
          </ol>
        </div>
        
        <div class="button-section">
          <button id="open-gamma-btn" class="primary-action-btn">
            <span class="btn-icon">🚀</span>
            <span class="btn-text">Open Gamma</span>
          </button>
        </div>
      </div>
      
      <div class="wrong-domain-footer">
        <p class="help-text">Transform your Gamma presentations into structured timetables with smart timing and export capabilities.</p>
      </div>
    </div>
  `;const s=document.getElementById("open-gamma-btn");s&&s.addEventListener("click",()=>{chrome.tabs.create({url:"https://gamma.app"})}),k([],"Wrong domain UI shown")}function Q(o,e=!1,t=null){const n=document.getElementById("timetable-title");n&&(n.textContent="Productory Powerups for Gamma");const s=document.getElementById("duration-badge");s&&(s.textContent="0h 0m");const a=e?`
    <button id="retry-connection-btn" class="retry-btn">
      <span class="btn-icon">🔄</span>
      <span class="btn-text">Try Again</span>
    </button>
  `:"";if(document.getElementById("sidebar-main").innerHTML=`
    <div class="connection-error">
      <div class="error-header">
        <div class="error-icon">⚠️</div>
        <h4>Connection Issue</h4>
      </div>
      <div class="error-content">
        <p class="error-message">${o}</p>
        ${a}
      </div>
      <div class="error-footer">
        <p class="help-text">If the problem persists, try refreshing the Gamma presentation page.</p>
      </div>
    </div>
  `,e){const r=document.getElementById("retry-connection-btn");r&&r.addEventListener("click",()=>{F("Reconnecting..."),T&&t&&T.postMessage({type:"retry-connection",tabId:t})})}k([],`Connection error: ${o}`)}function Pe(o){const e=document.createElement("div");e.className="connection-warning-banner",e.innerHTML=`
    <div class="warning-content">
      <span class="warning-icon">⚠️</span>
      <span class="warning-text">${o}</span>
      <button class="warning-close">×</button>
    </div>
  `;const t=document.getElementById("sidebar-root");t&&t.insertBefore(e,t.firstChild),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},5e3);const n=e.querySelector(".warning-close");n&&n.addEventListener("click",()=>{e.parentNode&&e.parentNode.removeChild(e)})}
