import{l as oe,s as ae,d as se,S as j,o as re}from"./index-Chgmd4Bq.js";const ie="modulepreload",ce=function(o){return"/"+o},W={},J=function(e,t,n){let a=Promise.resolve();if(t&&t.length>0){let r=function(l){return Promise.all(l.map(f=>Promise.resolve(f).then(d=>({status:"fulfilled",value:d}),d=>({status:"rejected",reason:d}))))};document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),u=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));a=r(t.map(l=>{if(l=ce(l),l in W)return;W[l]=!0;const f=l.endsWith(".css"),d=f?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${d}`))return;const c=document.createElement("link");if(c.rel=f?"stylesheet":ie,f||(c.as="script"),c.crossOrigin="",c.href=l,u&&c.setAttribute("nonce",u),document.head.appendChild(c),f)return new Promise((p,C)=>{c.addEventListener("load",p),c.addEventListener("error",()=>C(new Error(`Unable to preload CSS for ${l}`)))})}))}function s(r){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=r,window.dispatchEvent(i),!i.defaultPrevented)throw r}return a.then(r=>{for(const i of r||[])i.status==="rejected"&&s(i.reason);return e().catch(s)})};function Y(o,e={}){const{startTime:t="09:00",defaultDuration:n=5,existingItems:a=[]}=e,s=new Date(`1970-01-01T${t}:00`);let r=0;const i=o.map(u=>{const l=a.find(p=>p.id===u.id),f=l?l.duration:n,d=new Date(s);s.setMinutes(s.getMinutes()+f);const c=new Date(s);return r+=f,{id:u.id,title:u.title,content:u.content,startTime:d.toTimeString().slice(0,5),endTime:c.toTimeString().slice(0,5),duration:f}});return{startTime:t,items:i,totalDuration:r}}function le(o,e,t=!1){const n=document.createElement("a");if(n.setAttribute("download",o),n.style.visibility="hidden",document.body.appendChild(n),t)n.href=e;else{const a=new Blob([e],{type:"text/csv;charset=utf-8;"});n.href=URL.createObjectURL(a)}n.click(),document.body.removeChild(n)}function ue(o){var u;const e=((u=o.items[0])==null?void 0:u.title)||"Course Timetable",t=o.items.map(l=>[l.startTime,l.endTime,l.duration,l.title]),a=[[e],["Start","End","Duration","Slide title"],...t],s=XLSX.utils.aoa_to_sheet(a);s["!cols"]=[{wch:10},{wch:10},{wch:10},{wch:80}];const r=XLSX.utils.book_new();XLSX.utils.book_append_sheet(r,s,"Timetable");const i=XLSX.write(r,{bookType:"xlsx",type:"array"});return new Blob([i],{type:"application/octet-stream"})}function $(o,e){return ae(o,e)}function de(o){return oe(o)}function Z(o,e){return se(o,e)}const M={deviceInfo:"device_info_v1",deviceToken:"device_token_v1"},fe=2500,ge=5*60*1e3;class ee{constructor(e){this.storage=e||new j}async getStoredDeviceInfo(){return await this.storage.load(M.deviceInfo)||null}async getStoredToken(){return await this.storage.load(M.deviceToken)||null}async saveDeviceInfo(e){await this.storage.save(M.deviceInfo,e)}async saveToken(e){await this.storage.save(M.deviceToken,e)}async clearToken(){await this.storage.save(M.deviceToken,null)}isExpired(e){const t=Date.parse(e);return Number.isNaN(t)?!0:Date.now()>=t-5e3}async getValidTokenOrRefresh(e){const t=await this.getStoredToken();if(!t)return null;if(!this.isExpired(t.expiresAt))return t;try{const n=await this.refresh(e,t.token);if(n)return n}catch(n){console.warn("[DeviceAuth] token refresh failed:",n)}return null}async registerDevice(e){const t=await fetch(`${e}/api/devices/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({}),credentials:"include"});if(!t.ok)throw new Error(`registerDevice failed: ${t.status}`);const n=await t.json(),a={deviceId:n.deviceId,code:n.code,expiresAt:n.expiresAt};return await this.saveDeviceInfo(a),a}async getOrRegisterDevice(e){const t=await this.getStoredDeviceInfo();return t||this.registerDevice(e)}buildSignInUrl(e,t){const n=new URL(`${e.replace(/\/$/,"")}/`);return n.searchParams.set("source","extension"),n.searchParams.set("code",t),n.toString()}async exchange(e,t,n){const a=await fetch(`${e}/api/devices/exchange`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({deviceId:t,code:n})});if(a.status===404||a.status===425)return null;if(!a.ok)throw new Error(`exchange failed: ${a.status}`);const s=await a.json();return await this.saveToken(s),s}async refresh(e,t){const n=await fetch(`${e}/api/devices/refresh`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({})});if(!n.ok)return null;const a=await n.json();return await this.saveToken(a),a}async authorizedFetch(e,t,n){const a=await this.getValidTokenOrRefresh(e);if(!a)throw new Error("not_authenticated");const s=t.startsWith("http")?t:`${e.replace(/\/$/,"")}${t}`,r=new Headers((n==null?void 0:n.headers)||{});return r.set("Authorization",`Bearer ${a.token}`),r.set("Content-Type",r.get("Content-Type")||"application/json"),fetch(s,{...n,headers:r})}async pollExchangeUntilLinked(e,t,n,a){const s=(a==null?void 0:a.intervalMs)??fe,r=(a==null?void 0:a.maxWaitMs)??ge,i=Date.now();for(;;){if(Date.now()-i>r)return null;try{const u=await this.exchange(e,t,n);if(u)return u}catch(u){console.warn("[DeviceAuth] exchange error (will retry):",u)}await new Promise(u=>setTimeout(u,s))}}}const S=new ee,he=Object.freeze(Object.defineProperty({__proto__:null,DeviceAuth:ee,deviceAuth:S},Symbol.toStringTag,{value:"Module"}));class x{constructor(){this.storageKey="gamma_auth_state"}static getInstance(){return x.instance||(x.instance=new x),x.instance}getState(){if(typeof window>"u")return{state:"LOGGED_OUT"};const e=localStorage.getItem(this.storageKey);if(!e)return{state:"LOGGED_OUT"};try{const t=JSON.parse(e);return t.deviceToken&&t.userId?t.state="AUTHENTICATED":t.pairingCode&&t.deviceId?t.state="PAIRING_IN_PROGRESS":t.deviceId?t.state="DEVICE_REGISTERED":t.state="LOGGED_OUT",t}catch{return{state:"LOGGED_OUT"}}}setState(e){if(typeof window>"u")return;const n={...this.getState(),...e};n.deviceToken&&n.userId?n.state="AUTHENTICATED":n.pairingCode&&n.deviceId?n.state="PAIRING_IN_PROGRESS":n.deviceId?n.state="DEVICE_REGISTERED":n.state="LOGGED_OUT",localStorage.setItem(this.storageKey,JSON.stringify(n)),window.dispatchEvent(new CustomEvent("gamma-auth-changed",{detail:n}))}isAuthenticated(){const{state:e}=this.getState();return e==="AUTHENTICATED"}logout(){typeof window>"u"||(localStorage.removeItem(this.storageKey),localStorage.removeItem("clerk_session_token"),localStorage.removeItem("clerk_jwt_token"),localStorage.removeItem("device_id"),localStorage.removeItem("device_token"),localStorage.removeItem("pairing_code"),window.dispatchEvent(new CustomEvent("gamma-auth-logout")),this.setState({state:"LOGGED_OUT"}))}resetForTesting(){this.logout(),typeof window<"u"&&(sessionStorage.clear(),document.cookie.split(";").forEach(e=>{document.cookie=e.replace(/^ +/,"").replace(/=.*/,"=;expires="+new Date().toUTCString()+";path=/")})),console.log("[Auth] Complete reset for testing completed")}registerDevice(e,t){this.setState({deviceId:e,pairingCode:t,state:t?"PAIRING_IN_PROGRESS":"DEVICE_REGISTERED"})}authenticate(e,t,n,a){this.setState({userId:e,userEmail:t,deviceToken:n,clerkToken:a,state:"AUTHENTICATED"})}}const me=x.getInstance();typeof window<"u"&&(window.gammaAuth=me);var ye={};class pe{constructor(e){this.clerk=null,this.listeners=new Set,this.authState={isAuthenticated:!1,user:null,session:null,lastChecked:new Date().toISOString()},this.storage=e||new j}async initialize(){console.log("[AuthManager] initialize() called");const e=ye.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY;if(!e){console.error("[AuthManager] Clerk publishable key not found.");return}try{this.clerk=new re(e),console.log("[AuthManager] Clerk instance created"),await this.clerk.load(),console.log("[AuthManager] Clerk loaded"),this.clerk.addListener(t=>{this.handleClerkStateChange(t)}),this.updateAuthState(),console.log("[AuthManager] Initialization complete")}catch(t){console.error("[AuthManager] Failed to load Clerk:",t),this.clerk=null}}updateAuthState(){var n,a,s;if(!this.clerk)return;const e=this.clerk.user,t=this.clerk.session;this.authState={isAuthenticated:!!e&&!!t,user:e?{id:e.id,email:((n=e.primaryEmailAddress)==null?void 0:n.emailAddress)||"",name:e.fullName||"",createdAt:((a=e.createdAt)==null?void 0:a.toISOString())||new Date().toISOString()}:null,session:t?{userId:t.user.id,token:((s=t.lastActiveToken)==null?void 0:s.getRawString())||"",expiresAt:t.expireAt.toISOString(),isActive:t.status==="active"}:null,lastChecked:new Date().toISOString()},this.emitAuthEvent({type:this.authState.isAuthenticated?"login":"logout",user:this.authState.user,timestamp:new Date().toISOString()})}handleClerkStateChange(e){console.log("[AuthManager] Clerk state changed:",e),this.updateAuthState()}async isAuthenticated(){const e=await S.getStoredToken();if(e&&e.token)try{return!!await this.getCurrentUser()}catch(t){return console.warn("[AuthManager] Token validation failed:",t),!1}return this.authState.isAuthenticated}async getCurrentUser(){const e=await S.getStoredToken();if(e&&e.token)try{const n=(await J(()=>Promise.resolve().then(()=>ve),void 0).then(s=>s.configManager.getConfig())).environment.apiBaseUrl||"http://localhost:3000";console.log("[AuthManager] Attempting to fetch user profile from:",n+"/api/user/profile"),console.log("[AuthManager] Using device token:",e.token.substring(0,10)+"...");const a=await S.authorizedFetch(n,"/api/user/profile");if(console.log("[AuthManager] API response status:",a.status),a.ok){const s=await a.json(),r={id:s.user.id,email:s.user.email,name:s.user.name||s.user.email.split("@")[0],createdAt:s.user.linkedAt||new Date().toISOString()};return this.authState.user=r,r}else console.warn("[AuthManager] Failed to get user profile:",a.status),(a.status===404||a.status===401)&&(console.log("[AuthManager] Clearing invalid device token"),await S.clearToken())}catch(t){console.error("[AuthManager] Error getting user profile:",t),await S.clearToken()}return this.authState.user}async getAuthState(){return{...this.authState}}async login(){console.log("[AuthManager] login() delegated to sidebar pairing flow.")}async logout(){await S.clearToken(),this.updateAuthState()}async getUserPreferences(){const e={theme:"auto",autoSync:!1,syncInterval:30,exportFormat:"xlsx",notifications:!1};try{const t=await this.storage.load("user_preferences");if(t&&typeof t=="object")return{...e,...t}}catch(t){console.warn("[AuthManager] Could not load user preferences:",t)}return e}async updateUserPreferences(e){try{const n={...await this.getUserPreferences(),...e};await this.storage.save("user_preferences",n),this.emitAuthEvent({type:"auth_check",timestamp:new Date().toISOString()})}catch(t){throw console.error("[AuthManager] Could not update user preferences:",t),t}}addEventListener(e){this.listeners.add(e)}removeEventListener(e){this.listeners.delete(e)}emitAuthEvent(e){this.listeners.forEach(t=>{try{t(e)}catch(n){console.error("[AuthManager] Error in auth event listener:",n)}})}}const E=new pe,U={authentication:!0,userProfiles:!1,sessionManagement:!1,cloudSync:!0,autoSync:!1,syncQueue:!1,conflictResolution:!1,realTimeSync:!1,collaborativeEditing:!1,liveUpdates:!1,advancedSearch:!1,dataVersioning:!1,exportHistory:!1,bulkOperations:!1,offlineMode:!0,localStorage:!0,exportFeatures:!0,basicUI:!0,debugMode:!0,loggingEnabled:!0,performanceMetrics:!1},K={environment:"development",apiBaseUrl:"http://localhost:3000",webBaseUrl:"http://localhost:3000",enableAnalytics:!1,logLevel:"debug",maxStorageSize:50,syncIntervalMs:3e4},Se={environment:"production",apiBaseUrl:"https://productory-powerups.netlify.app",webBaseUrl:"https://productory-powerups.netlify.app",enableAnalytics:!1,logLevel:"info",maxStorageSize:50,syncIntervalMs:3e4};function we(){return typeof __BUILD_ENV__<"u"&&__BUILD_ENV__==="production"?Se:K}const q=we(),z={theme:"auto",language:"en",exportFormat:"xlsx",notifications:!1,autoSave:!0,syncOnStartup:!0};class te{constructor(e){this.config=null,this.listeners=new Set,this.storage=e||new j}async initialize(){try{const e=await this.storage.load("app_config_v3");e&&this.isValidConfig(e)?(this.config=this.applyMigrationsAndMergeDefaults(e),await this.saveConfig(),console.log("[ConfigManager] Loaded existing configuration (with migrations/defaults applied)")):(this.config=this.createDefaultConfig(),await this.saveConfig(),console.log("[ConfigManager] Created default configuration")),this.notifyListeners()}catch(e){console.error("[ConfigManager] Failed to initialize:",e),this.config=this.createDefaultConfig()}}getConfig(){return this.config?{...this.config}:this.createDefaultConfig()}isFeatureEnabled(e){return this.getConfig().features[e]||!1}async updateFeatureFlags(e){const t=this.getConfig(),n={},a=["debugMode","loggingEnabled","performanceMetrics"];for(const[s,r]of Object.entries(e))a.includes(s)&&typeof r=="boolean"?n[s]=r:a.includes(s)?console.warn(`[ConfigManager] Feature '${s}' must be boolean value`):console.warn(`[ConfigManager] Feature '${s}' cannot be modified in Sprint 0`);t.features={...t.features,...n},t.lastUpdated=new Date().toISOString(),this.config=t,await this.saveConfig(),this.notifyListeners()}async updateUserConfig(e){const t=this.getConfig();t.user={...t.user,...e},t.lastUpdated=new Date().toISOString(),this.config=t,await this.saveConfig(),this.notifyListeners()}async updateEnvironmentConfig(e){const t=this.getConfig(),n={},a=["logLevel","maxStorageSize","enableAnalytics","syncIntervalMs"];for(const[s,r]of Object.entries(e))a.includes(s)?n[s]=r:console.warn(`[ConfigManager] Environment setting '${s}' cannot be modified in Sprint 0`);t.environment={...t.environment,...n},t.lastUpdated=new Date().toISOString(),this.config=t,await this.saveConfig(),this.notifyListeners()}getUIFeatureStatus(){const e=this.getConfig(),t={};for(const[n,a]of Object.entries(e.features)){let s=a?"Feature enabled":"Feature disabled";a||(["authentication","userProfiles","sessionManagement"].includes(n)?s="Available in Sprint 1":["cloudSync","autoSync","syncQueue","conflictResolution"].includes(n)?s="Available in Sprint 2":["realTimeSync","collaborativeEditing","liveUpdates"].includes(n)?s="Available in Sprint 3":["advancedSearch","dataVersioning","exportHistory","bulkOperations"].includes(n)&&(s="Available in Sprint 4")),t[n]={enabled:a,reason:s}}return t}addConfigListener(e){this.listeners.add(e)}removeConfigListener(e){this.listeners.delete(e)}async resetToDefaults(){this.config=this.createDefaultConfig(),await this.saveConfig(),this.notifyListeners(),console.log("[ConfigManager] Configuration reset to defaults")}getFeatureConfig(e){const t=this.getConfig();return{storage:{maxSize:t.environment.maxStorageSize,enableSync:t.features.cloudSync,localOnly:!t.features.cloudSync},auth:{enabled:t.features.authentication,sessionTimeout:36e5,requireAuth:!1},sync:{enabled:t.features.autoSync,interval:t.environment.syncIntervalMs,queueEnabled:t.features.syncQueue},ui:{theme:t.user.theme,language:t.user.language,notifications:t.user.notifications},export:{enabled:t.features.exportFeatures,defaultFormat:t.user.exportFormat,historyEnabled:t.features.exportHistory}}[e]||null}createDefaultConfig(){return console.log("[ConfigManager] Creating a new default configuration object."),{features:{...U},environment:{...q},user:{...z},version:"0.0.7",lastUpdated:new Date().toISOString()}}applyMigrationsAndMergeDefaults(e){const t={...e,features:{...U,...e.features},environment:{...q,...e.environment},user:{...z,...e.user},version:e.version||"0.0.7",lastUpdated:new Date().toISOString()};return U.authentication&&!t.features.authentication&&(t.features.authentication=!0),t}async saveConfig(){if(this.config)try{await this.storage.save("app_config_v3",this.config)}catch(e){throw console.error("[ConfigManager] Failed to save configuration:",e),e}}isValidConfig(e){return e!==null&&typeof e=="object"&&"features"in e&&"environment"in e&&"user"in e&&"version"in e&&"lastUpdated"in e}notifyListeners(){this.config&&this.listeners.forEach(e=>{try{e(this.config)}catch(t){console.error("[ConfigManager] Error in config listener:",t)}})}}const I=new te,ve=Object.freeze(Object.defineProperty({__proto__:null,ConfigManager:te,DEFAULT_ENVIRONMENT_CONFIG:q,DEFAULT_FEATURE_FLAGS:U,DEFAULT_USER_CONFIG:z,configManager:I},Symbol.toStringTag,{value:"Module"})),be={enableCloudSync:!0,syncDebounceMs:500,maxRetries:3,retryDelayMs:1e3,dataVersion:1};class Ee{constructor(e={}){this.syncQueue=[],this.config={...be,...e}}async save(e,t){try{const n={version:this.config.dataVersion,data:t,timestamp:new Date,presentation_url:this.extractPresentationUrl(e)};await this.chromeStorageSave(e,n),this.config.enableCloudSync&&this.addToSyncQueue(e,t,"save")}catch(n){throw console.error("[StorageManager] Save failed:",n),n}}async load(e){try{const t=await this.chromeStorageLoad(e);if(!t)return;if(!this.isVersionedData(t))return console.log("[StorageManager] Loading legacy data for key:",e),t;const n=t;return n.version!==this.config.dataVersion&&console.log(`[StorageManager] Data version mismatch for key ${e}: ${n.version} vs ${this.config.dataVersion}`),n.data}catch(t){throw console.error("[StorageManager] Load failed:",t),t}}async remove(e){try{await this.chromeStorageRemove(e),this.config.enableCloudSync&&this.addToSyncQueue(e,null,"remove")}catch(t){throw console.error("[StorageManager] Remove failed:",t),t}}async clear(){try{await this.chromeStorageClear(),this.syncQueue=[]}catch(e){throw console.error("[StorageManager] Clear failed:",e),e}}async retryWithBackoff(e,t,n=()=>!0){let a;for(let s=1;s<=this.config.maxRetries;s++)try{return await e()}catch(r){if(a=r,!n(r))throw r;if(s===this.config.maxRetries)throw console.error(`[StorageManager] ${t} failed after ${s} attempts:`,r),r;const i=this.config.retryDelayMs*Math.pow(2,s-1)+Math.random()*1e3;console.warn(`[StorageManager] ${t} attempt ${s} failed, retrying in ${Math.round(i)}ms:`,r),await new Promise(u=>setTimeout(u,i))}throw a}isRetriableNetworkError(e){return e.status===401||e.status===403||e.status>=400&&e.status<500&&e.status!==429?!1:e.name==="TypeError"||e.status>=500||e.status===429||!e.status}async syncToCloud(e,t,n={}){if(!this.config.enableCloudSync)return{success:!1,error:"Cloud sync disabled"};const{title:a,apiBaseUrl:s,deviceAuth:r}=n;if(!r)return{success:!1,error:"Authentication required"};if(!s)return{success:!1,error:"API base URL required"};try{return await this.retryWithBackoff(async()=>{if(!await r.getValidTokenOrRefresh(s)){const c=new Error("Not authenticated");throw c.status=401,c}const u=Array.isArray(t==null?void 0:t.items)?t.items.map(c=>{const p=(c==null?void 0:c.id)!==null&&(c==null?void 0:c.id)!==void 0?String(c.id):"",C=(c==null?void 0:c.title)!==null&&(c==null?void 0:c.title)!==void 0?String(c.title):"",k=Number(c==null?void 0:c.duration),g=typeof(c==null?void 0:c.startTime)=="string"?c.startTime.slice(0,5):c==null?void 0:c.startTime,m=typeof(c==null?void 0:c.endTime)=="string"?c.endTime.slice(0,5):c==null?void 0:c.endTime;return{id:p,title:C,duration:Number.isFinite(k)?k:0,startTime:g,endTime:m,content:c==null?void 0:c.content}}).filter(c=>c.id&&c.title&&typeof c.duration=="number"):[],l={gamma_url:e,title:a||t.title||"Untitled Presentation",start_time:t.startTime||"09:00",total_duration:t.totalDuration||0,timetable_data:{title:t.title,items:u,startTime:t.startTime,totalDuration:t.totalDuration,lastModified:new Date().toISOString()}},f=await r.authorizedFetch(s,"/api/presentations/save",{method:"POST",body:JSON.stringify(l)});if(!f.ok){const c=await f.json().catch(()=>({})),p=new Error(c.error||`API error: ${f.status}`);throw p.status=f.status,p}const d=await f.json();return console.log("[StorageManager] Successfully synced to cloud:",e),{success:!0,data:d}},"Cloud sync to save",this.isRetriableNetworkError.bind(this))}catch(i){return console.error("[StorageManager] Cloud sync failed:",i),{success:!1,error:i instanceof Error?i.message:"Unknown error"}}}async syncFromCloud(e,t={}){if(!this.config.enableCloudSync)return{success:!1,error:"Cloud sync disabled"};const{apiBaseUrl:n,deviceAuth:a}=t;if(!a)return{success:!1,error:"Authentication required"};if(!n)return{success:!1,error:"API base URL required"};try{return await this.retryWithBackoff(async()=>{var u;if(!await a.getValidTokenOrRefresh(n)){const l=new Error("Not authenticated");throw l.status=401,l}const r=await a.authorizedFetch(n,`/api/presentations/get?url=${encodeURIComponent(e)}`);if(r.status===404){const l=new Error("Presentation not found in cloud");throw l.status=404,l}if(!r.ok){const l=await r.json().catch(()=>({})),f=new Error(l.error||`API error: ${r.status}`);throw f.status=r.status,f}const i=await r.json();return(u=i==null?void 0:i.timetableData)!=null&&u.items&&Array.isArray(i.timetableData.items)&&(i.timetableData.items=i.timetableData.items.map(l=>({...l,id:String((l==null?void 0:l.id)??""),title:String((l==null?void 0:l.title)??""),duration:Number((l==null?void 0:l.duration)??0)}))),console.log("[StorageManager] Successfully synced from cloud:",e),{success:!0,data:i.timetableData}},"Cloud sync from load",this.isRetriableNetworkError.bind(this))}catch(s){return console.error("[StorageManager] Cloud sync from failed:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}async syncPresentationsList(e={}){if(!this.config.enableCloudSync)return{success:!1,error:"Cloud sync disabled"};const{apiBaseUrl:t,deviceAuth:n,limit:a=50,offset:s=0,sortBy:r="updated_at"}=e;if(!n)return{success:!1,error:"Authentication required"};if(!t)return{success:!1,error:"API base URL required"};try{return await this.retryWithBackoff(async()=>{if(!await n.getValidTokenOrRefresh(t)){const d=new Error("Not authenticated");throw d.status=401,d}const u=new URL("http://localhost").searchParams;u.set("limit",a.toString()),u.set("offset",s.toString()),u.set("sortBy",r);const l=await n.authorizedFetch(t,`/api/presentations/list?${u.toString()}`);if(!l.ok){const d=await l.json().catch(()=>({})),c=new Error(d.error||`API error: ${l.status}`);throw c.status=l.status,c}const f=await l.json();return console.log("[StorageManager] Successfully retrieved presentations list from cloud"),{success:!0,data:f}},"Cloud presentations list",this.isRetriableNetworkError.bind(this))}catch(i){return console.error("[StorageManager] Presentations list sync failed:",i),{success:!1,error:i instanceof Error?i.message:"Unknown error"}}}async autoSyncIfAuthenticated(e,t,n={}){if(!this.config.enableCloudSync)return;const{deviceAuth:a,apiBaseUrl:s}=n;if(!(!a||!s))try{if(!await a.getValidTokenOrRefresh(s))return;const i=await this.syncToCloud(e,t,n);i.success?console.log("[StorageManager] Auto-sync successful"):console.warn("[StorageManager] Auto-sync failed:",i.error)}catch(r){console.warn("[StorageManager] Auto-sync error (non-critical):",r)}}chromeStorageSave(e,t){return new Promise((n,a)=>{chrome.storage.local.set({[e]:t},()=>{if(chrome.runtime.lastError)return a(chrome.runtime.lastError);n()})})}chromeStorageLoad(e){return new Promise((t,n)=>{chrome.storage.local.get(e,a=>{if(chrome.runtime.lastError)return n(chrome.runtime.lastError);t(a[e])})})}chromeStorageRemove(e){return new Promise((t,n)=>{chrome.storage.local.remove(e,()=>{if(chrome.runtime.lastError)return n(chrome.runtime.lastError);t()})})}chromeStorageClear(){return new Promise((e,t)=>{chrome.storage.local.clear(()=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);e()})})}isVersionedData(e){return e&&typeof e=="object"&&"version"in e&&"data"in e&&"timestamp"in e}extractPresentationUrl(e){const t=e.match(/^timetable-(.+)$/);return t?t[1]:void 0}addToSyncQueue(e,t,n){const a={key:e,data:t,operation:n,timestamp:new Date,attempts:0};this.syncQueue.push(a),this.scheduleSyncProcess()}scheduleSyncProcess(){this.syncTimer&&clearTimeout(this.syncTimer),this.syncTimer=setTimeout(()=>{this.processSyncQueue()},this.config.syncDebounceMs)}async processSyncQueue(){if(!(!this.config.enableCloudSync||this.syncQueue.length===0)){console.log(`[StorageManager] Processing sync queue: ${this.syncQueue.length} items`);for(const e of this.syncQueue)console.log("[StorageManager] Sync queue item:",e);this.syncQueue=[]}}getSyncQueueStatus(){return{count:this.syncQueue.length,items:[...this.syncQueue]}}updateConfig(e){this.config={...this.config,...e}}}const B=new Ee;async function Ae(o,e,t={}){if(await B.save(o,e),t.enableAutoSync!==!1&&t.deviceAuth&&t.apiBaseUrl){const n=B.extractPresentationUrl(o);n&&await B.autoSyncIfAuthenticated(n,e,{title:t.title,apiBaseUrl:t.apiBaseUrl,deviceAuth:t.deviceAuth})}}console.log("[SIDEBAR] Script loaded");const Ie=typeof __APP_VERSION__<"u"?__APP_VERSION__:"DEV";let R=!1,L=[],h=null,T=null,D=null,Ce=!1,De=!1;function ke(o){if(!h){console.log("[SIDEBAR] No current timetable, generating a new one.");const a=Y(o);_(a),O();return}console.log("[SIDEBAR] Reconciling new slide data with existing timetable.");const e=[],t=new Map(h.items.map(a=>[a.id,a]));for(const a of o){const s=t.get(a.id);s?e.push({...s,title:a.title,content:a.content}):e.push({...a,duration:5})}h.items=e;const n=H(h);_(n),O()}const Te=async(o,e)=>{var n;if(console.log(`[SIDEBAR] updateUIWithNewSlides called for tab ${e} with`,(o==null?void 0:o.length)||0,"slides"),L=o||[],o.length===0){document.getElementById("sidebar-main").innerHTML="<p>No slides detected in this Gamma presentation.</p>",A(o,"Received: slide-data (empty)");return}const t=(n=o[0])==null?void 0:n.presentationUrl;if(t){if(t!==D){console.log(`[SIDEBAR] Switched to new presentation: ${t}. Loading from storage...`),D=t;const a=`timetable-${t}`;let s=await de(a);const r=I.getConfig();if(r.features.cloudSync&&r.environment.apiBaseUrl)try{const i=await B.syncFromCloud(t,{apiBaseUrl:r.environment.apiBaseUrl,deviceAuth:S});if(i.success&&i.data){console.log("[SIDEBAR] Found cloud version, merging with local...");const u=i.data;!s||u.lastModified&&s.lastModified&&new Date(u.lastModified)>new Date(s.lastModified)?(s=u,await $(a,u),console.log("[SIDEBAR] Using cloud version (newer than local).")):console.log("[SIDEBAR] Using local version (newer than cloud).")}else!i.success&&i.error!=="Presentation not found in cloud"&&console.warn("[SIDEBAR] Cloud sync failed:",i.error)}catch(i){console.warn("[SIDEBAR] Cloud sync error (non-critical):",i)}s?(console.log("[SIDEBAR] Found stored timetable."),h=s):(console.log("[SIDEBAR] No stored timetable, generating a new one..."),h=Y(o))}ke(o),A(o,"Rendered: slide-data")}};function xe(){if(console.log("[SIDEBAR] Connecting to background script..."),T=chrome.runtime.connect({name:"sidebar"}),console.log("[SIDEBAR] Connected to background"),!T){console.error("[SIDEBAR] Failed to create port connection");return}R=!0,A(L,"Connected to background"),T.onMessage.addListener(o=>{if(console.log("[SIDEBAR] Received message from background:",o),o.type==="slide-data")Te(o.slides,o.tabId);else if(o.type==="gamma-tab-activated")o.tabId,V("Loading timetable..."),T.postMessage({type:"get-slides"});else if(o.type==="wrong-domain")je(o.tabUrl);else if(o.type==="connection-status")V(o.message,o.status);else if(o.type==="connection-error")X(o.message,o.canRetry,o.tabId);else if(o.type==="connection-warning")He(o.message);else if(o.type==="show-message"){document.getElementById("sidebar-main").innerHTML=`<p>${o.message}</p>`;const e=document.getElementById("timetable-title");e&&(e.textContent="Productory Powerups for Gamma");const t=document.getElementById("duration-badge");t&&(t.textContent="0h 0m")}else o.type==="error"&&(console.error("[SIDEBAR] Error from background:",o.message),X(o.message,!1))}),T.onDisconnect.addListener(()=>{T=null,R=!1,console.log("[SIDEBAR] Disconnected from background script."),A(L,"Disconnected")})}function Be(o){let e="";return o.forEach(t=>{switch(t.type){case"paragraph":e+=`<p>${t.text}</p>`;break;case"image":e+=`<img src="${t.text}" class="thumbnail-img">`;break;case"link":e+=`<a href="${t.text}" target="_blank" class="content-link">${t.text}</a>`;break;case"list_item":e+=`<p>${t.text}</p>`,t.subItems&&t.subItems.length>0&&(e+='<ul class="sub-items-list">',t.subItems.forEach(n=>{e+=`<li class="sub-item">${n}</li>`}),e+="</ul>");break}}),e}function Le(o,e){const t=document.createElement("div");t.className="time-input-container";const[n,a]=o.startTime.split(":"),s=document.createElement("input");s.type="text",s.className="time-input-segment",s.value=n,s.maxLength=2,s.placeholder="00",s.inputMode="numeric";const r=document.createElement("span");r.className="time-input-separator",r.textContent=":";const i=document.createElement("input");i.type="text",i.className="time-input-segment",i.value=a,i.maxLength=2,i.placeholder="00",i.inputMode="numeric";let u=!1;const l=()=>{const g=s.value.trim(),m=i.value.trim();if(g&&m){const y=parseInt(g,10),b=parseInt(m,10);if(!isNaN(y)&&!isNaN(b)&&y>=0&&y<=23&&b>=0&&b<=59){const N=`${g.padStart(2,"0")}:${m.padStart(2,"0")}`;e(N)}}},f=Z(l,200),d=(g,m)=>{const y=m.target.value,b=y.replace(/[^0-9]/g,"");return b!==y&&(m.target.value=b),b},c=(g,m)=>{if(g.length===2){const y=parseInt(g,10);return!isNaN(y)&&y>=0&&y<=23}return!1},p=()=>{u=!0},C=()=>{u=!1,l()};s.addEventListener("focus",p),s.addEventListener("blur",C),i.addEventListener("focus",p),i.addEventListener("blur",C),s.addEventListener("input",g=>{const m=d(s,g);c(m)&&setTimeout(()=>i.focus(),50),f()}),s.addEventListener("keydown",g=>{if(g.key==="ArrowUp"||g.key==="ArrowDown"){g.preventDefault();const m=parseInt(s.value||"0",10),y=g.key==="ArrowUp"?1:-1,b=Math.max(0,Math.min(23,m+y));s.value=b.toString().padStart(2,"0"),f()}g.key==="Enter"&&(i.focus(),l())}),i.addEventListener("input",g=>{d(i,g),f()}),i.addEventListener("keydown",g=>{if(g.key==="ArrowUp"||g.key==="ArrowDown"){g.preventDefault();const m=parseInt(i.value||"0",10),y=g.key==="ArrowUp"?1:-1,b=Math.max(0,Math.min(59,m+y));i.value=b.toString().padStart(2,"0"),f()}g.key==="Enter"&&(l(),s.focus()),g.key==="Backspace"&&i.value===""&&s.focus()});const k=g=>{g.preventDefault();const y=g.clipboardData.getData("text").trim().match(/^(\d{1,2}):?(\d{2})$/);if(y){const[,b,N]=y,F=parseInt(b,10),G=parseInt(N,10);F>=0&&F<=23&&G>=0&&G<=59&&(s.value=F.toString().padStart(2,"0"),i.value=G.toString().padStart(2,"0"),l())}};return s.addEventListener("paste",k),i.addEventListener("paste",k),t.appendChild(s),t.appendChild(r),t.appendChild(i),t._hasFocus=()=>u,t}async function Me(o=[],e="none",t={}){const{authFeatureEnabled:n=!1,isAuthenticated:a=!1,userEmail:s=""}=t,{debugMode:r=!1}=t,i=o.length,u=o[0]?JSON.stringify(o[0],null,2):"N/A";let l="";if(n)try{const f=await S.getStoredToken(),d=await S.getStoredDeviceInfo(),c=I.getConfig();l=`
        <details open><summary><strong>🔐 Authentication Status</strong></summary>
        <div style="font-family: monospace; font-size: 11px; margin: 8px 0; padding: 8px; background: #f8f9fa; border-radius: 4px;">
          <div><strong>Device Token:</strong> ${f?`✅ Present (expires: ${new Date(f.expiresAt).toLocaleString()})`:"❌ Missing"}</div>
          <div><strong>Device ID:</strong> ${d?d.deviceId:"Not registered"}</div>
          <div><strong>Pairing Code:</strong> ${d&&d.code?d.code:"None"}</div>
          <div><strong>API Base URL:</strong> ${c.environment.apiBaseUrl}</div>
          <div><strong>User Profile:</strong> ${a?s!=="user@example.com"?`✅ ${s}`:"⚠️ Fallback email (API failed)":"❌ Not authenticated"}</div>
        </div>
        </details>`,l+=`<div style="margin-top: 8px;">${a?`<button id="debug-refresh-profile" class="export-btn" style="font-size: 11px; padding: 4px 8px; margin: 2px;">Refresh Profile</button>
         <button id="debug-logout-btn" class="export-btn" style="font-size: 11px; padding: 4px 8px; margin: 2px;">Logout</button>
         <button id="debug-clear-auth" class="export-btn" style="font-size: 11px; padding: 4px 8px; margin: 2px;">Clear Auth Data</button>`:'<button id="debug-login-btn" class="export-btn" style="font-size: 11px; padding: 4px 8px; margin: 2px;">Login/Pair Device</button>'}</div>`}catch(f){l=`<div style="color: red;">Auth debug error: ${f.message}</div>`}return`
        <strong>Debug Info (v${Ie})</strong><br>
        Auth Feature: <strong style="color: ${n?"green":"red"}">${n?"ENABLED":"DISABLED"}</strong><br>
        Slides Detected: <strong>${i}</strong><br>
        Connection Status: <span style="color:${R?"green":"red"};font-weight:bold;">${R?"Connected":"Disconnected"}</span><br>
        Last Action: <span style="font-family: monospace;">${e}</span><br>
        ${l}
        <details><summary>First Slide Preview</summary><pre>${u}</pre></details>
    `}function Re(o=[]){const e=document.getElementById("slide-count"),t=document.getElementById("connection-status");if(e){const n=o.length;e.textContent=n===1?"1 slide detected":`${n} slides detected`}t&&(R?(t.textContent="✓",t.style.color="green",t.title="Extension connected and working"):(t.textContent="⚠️",t.style.color="orange",t.title="Connection issue - try refreshing"))}async function A(o=[],e="none"){Re(o);const t=document.getElementById("debug-info");if(!t)return;const n=I.isFeatureEnabled("authentication"),a=I.isFeatureEnabled("debugMode");let s=!1,r="";if(n)try{s=await E.isAuthenticated();const d=await E.getCurrentUser();r=(d==null?void 0:d.email)||"",console.log("[SIDEBAR] Auth check complete:",{isAuthed:s,email:r})}catch(d){console.error("[SIDEBAR] Auth check failed:",d),r="user@example.com"}t.innerHTML=await Me(o,e,{authFeatureEnabled:n,isAuthenticated:s,userEmail:r,debugMode:a});const i=document.getElementById("debug-login-btn");i&&i.addEventListener("click",async()=>{console.log("[SIDEBAR] Debug login button clicked"),await E.login()});const u=document.getElementById("debug-logout-btn");u&&u.addEventListener("click",async()=>{console.log("[SIDEBAR] Debug logout button clicked"),await E.logout(),await A(o,"Manual logout")});const l=document.getElementById("debug-refresh-profile");l&&l.addEventListener("click",async()=>{console.log("[SIDEBAR] Debug refresh profile button clicked");try{const d=await E.getCurrentUser();console.log("[SIDEBAR] Refreshed user profile:",d),await A(o,"Profile refreshed"),await P()}catch(d){console.error("[SIDEBAR] Profile refresh failed:",d),await A(o,`Profile refresh failed: ${d.message}`)}});const f=document.getElementById("debug-clear-auth");f&&f.addEventListener("click",async()=>{console.log("[SIDEBAR] Debug clear auth data button clicked");try{await S.clearToken(),await new Promise(d=>{chrome.storage.local.remove(["device_info_v1","device_token_v1","gamma_auth_state"],d)}),console.log("[SIDEBAR] Auth data cleared"),await A(o,"Auth data cleared"),await P()}catch(d){console.error("[SIDEBAR] Clear auth failed:",d),await A(o,`Clear auth failed: ${d.message}`)}})}function _(o){var f;console.log("[DEBUG] renderTimetable() called - about to recreate login button"),h=o;const e=document.getElementById("sidebar-main");if(!e)return;const t=document.getElementById("timetable-title");t&&(t.textContent=((f=o.items[0])==null?void 0:f.title)||"Course Timetable");const n=document.getElementById("duration-badge");if(n){const d=Math.floor(o.totalDuration/60),c=o.totalDuration%60;n.textContent=`${d}h ${c}m`}const a=document.getElementById("functions-toolbar");if(!a)return;a.innerHTML="";const s=document.createElement("div");s.className="time-display-section";const r=Le(o,d=>{h.startTime=d;const c=H(h);(!r._hasFocus||!r._hasFocus())&&_(c),O()});s.prepend(r),a.appendChild(s);const i=document.createElement("div");i.className="export-options",i.innerHTML=`
    <button id="export-xlsx-btn" class="export-btn"><img src="/assets/xlsx.svg" alt="Excel">Excel</button>
    <button id="auth-login-toolbar-btn" class="export-btn"><span>🔐</span><span id="auth-toolbar-text">Login</span></button>
  `,a.appendChild(i),e.innerHTML="",i.querySelector("#export-xlsx-btn").onclick=()=>{if(!h)return;const d=ue(h),c=`gamma-timetable-${new Date().toISOString().slice(0,10)}.xlsx`,p=URL.createObjectURL(d);le(c,p,!0)};const u=i.querySelector("#auth-login-toolbar-btn"),l=i.querySelector("#auth-toolbar-text");if(console.log("[DEBUG] Login button elements found:",{loginToolbarBtn:!!u,loginToolbarText:!!l}),u&&l){console.log("[DEBUG] Attempting to wire auth action...");const d=async()=>{console.log("[DEBUG] wireAuthAction() called");const c=await E.isAuthenticated();console.log("[DEBUG] User authentication status:",c),c?(l.textContent="Logout",u.title="Click to logout",u.onclick=async()=>{console.log("[SIDEBAR] Toolbar logout button clicked"),await E.logout(),await d()},console.log("[DEBUG] Logout handler attached")):(l.textContent="Login",u.title="Click to login and enable cloud sync",u.onclick=async()=>{var p;console.log("[SIDEBAR] Toolbar login button clicked (web-first pairing)");try{const C=I.getConfig(),k=C.environment.apiBaseUrl||"http://localhost:3000",g=C.environment.webBaseUrl||"http://localhost:3000",m=await S.registerDevice(k),y=S.buildSignInUrl(g,m.code);(p=chrome==null?void 0:chrome.tabs)!=null&&p.create?chrome.tabs.create({url:y}):window!=null&&window.open&&window.open(y,"_blank"),await S.pollExchangeUntilLinked(k,m.deviceId,m.code)?(console.log("[SIDEBAR] Device linked; token stored."),await d()):console.warn("[SIDEBAR] Device linking timed out.")}catch(C){console.error("[SIDEBAR] Web-first login failed:",C)}},console.log("[DEBUG] Login handler attached"))};console.log("[DEBUG] About to call wireAuthAction()...");try{d().then(()=>{console.log("[DEBUG] wireAuthAction() completed successfully")}).catch(c=>{console.error("[DEBUG] wireAuthAction() failed:",c)})}catch(c){console.error("[DEBUG] wireAuthAction() failed immediately:",c)}}else console.error("[DEBUG] Login button elements NOT found - cannot wire auth action");o.items.forEach(d=>{const c=document.createElement("div");c.className="slide-item";const p=Be(d.content);c.innerHTML=`
      <div class="slide-item-header">
        <h3 class="slide-item__title">${d.title}</h3>
        <div class="slide-item-time">
          ${d.startTime} - ${d.endTime}
        </div>
      </div>
      <div class="duration-slider-container">
        <input type="range" min="0" max="60" value="${d.duration}" class="duration-slider" data-slide-id="${d.id}">
        <span class="duration-display">${parseInt(d.duration,10)} min</span>
      </div>
      <div class="slide-item-content">${p}</div>
    `,e.appendChild(c)}),e.querySelectorAll(".duration-slider").forEach(d=>{d.addEventListener("input",_e),d.addEventListener("change",Ue)})}const O=Z(async()=>{var o;if(h&&D){const e=`timetable-${D}`;try{const t=I.getConfig(),n=t.environment.apiBaseUrl;t.features.cloudSync&&n?(await Ae(e,h,{deviceAuth:S,apiBaseUrl:n,title:h.title||((o=L[0])==null?void 0:o.title)||"Untitled Presentation",enableAutoSync:!0}),console.log("[SIDEBAR] Timetable saved with cloud sync.")):(await $(e,h),console.log("[SIDEBAR] Timetable saved (local only)."))}catch(t){console.error("[SIDEBAR] Save failed:",t);try{await $(e,h),console.log("[SIDEBAR] Timetable saved (fallback to local).")}catch(n){console.error("[SIDEBAR] Fallback save also failed:",n)}}}},500);function _e(o){const e=parseInt(o.target.value,10),t=o.target.nextElementSibling;t&&(t.textContent=`${e} min`)}function Ue(o){const e=o.target.getAttribute("data-slide-id"),t=parseInt(o.target.value,10),n=h.items.find(s=>s.id===e);if(n){n.duration=t;const s=H(h);_(s),O()}const a=o.target.nextElementSibling;a&&(a.textContent=`${t} min`)}function H(o){const e=new Date(`1970-01-01T${o.startTime}:00`);let t=0;const n=o.items.map(a=>{const s=new Date(e),r=a.duration;e.setMinutes(e.getMinutes()+r);const i=new Date(e);return t+=r,{...a,startTime:s.toTimeString().slice(0,5),endTime:i.toTimeString().slice(0,5)}});return{...o,items:n,totalDuration:t}}document.addEventListener("DOMContentLoaded",async()=>{console.log("[SIDEBAR] DOMContentLoaded fired"),await $e(),xe()});async function $e(){try{console.log("[SIDEBAR] Initializing infrastructure..."),await I.initialize(),De=!0,console.log("[SIDEBAR] ConfigManager initialized"),await E.initialize(),Ce=!0,console.log("[SIDEBAR] AuthManager initialized"),console.log("[SIDEBAR] Clerk key present at build:",typeof __HAS_CLERK_KEY__<"u"?__HAS_CLERK_KEY__:"unknown"),await Oe(),Pe(),A([],"Infrastructure ready"),console.log("[SIDEBAR] Infrastructure ready")}catch(o){console.error("[SIDEBAR] Failed to initialize infrastructure:",o),console.log("[SIDEBAR] Continuing in fallback mode...")}}async function Oe(){await ne(),await P()}async function ne(){const o=document.getElementById("auth-status-bar");if(!o)return;if(!(await I.getConfig()).features.authentication){o.style.display="none";return}o.style.display="none"}function Pe(){E.addEventListener(async o=>{console.log("[SIDEBAR] Auth state changed:",o.type),await ne(),await P(),A(L,`Auth event: ${o.type}`)})}async function P(){const o=document.getElementById("cloud-sync-section");if(!o)return;const e=I.getConfig();if(!(e.features.cloudSync&&e.environment.apiBaseUrl)){o.style.display="none";return}try{if(await E.isAuthenticated()){o.style.display="block";const a=document.getElementById("save-to-cloud-btn"),s=document.getElementById("load-from-cloud-btn"),r=document.getElementById("cloud-sync-toggle");if(a&&(a.disabled=!1),s&&(s.disabled=!1),r&&(r.disabled=!1,!r.dataset.initialized)){try{const i=await J(()=>Promise.resolve().then(()=>he),void 0).then(u=>u.deviceAuth.getStoredToken());if(i&&i.token){r.classList.add("active");const u=r.querySelector(".sync-btn-text");try{const l=await E.getCurrentUser(),f=(l==null?void 0:l.email)||"user@example.com",d=f.length>25?f.substring(0,22)+"...":f;u&&(u.textContent=`Cloud Sync: ${d}`)}catch(l){console.warn("[SIDEBAR] Could not get user email for cloud sync:",l),u&&(u.textContent="Cloud Sync: On")}w("Cloud sync enabled - timetables will sync across devices","success"),v("synced")}else{r.classList.remove("active");const u=r.querySelector(".sync-btn-text");u&&(u.textContent="Cloud Sync: Off"),w("Login to enable cloud sync","info"),v("offline")}}catch(i){console.warn("[SIDEBAR] Error checking auth for smart defaults:",i)}r.dataset.initialized="true"}Ne(),await ze()}else{o.style.display="block";const a=document.getElementById("cloud-sync-toggle");if(a){a.disabled=!0,a.classList.remove("active");const s=a.querySelector(".sync-btn-text");s&&(s.textContent="Cloud Sync: Login Required"),a.title="Login first to enable cloud sync"}w("Login to enable cloud sync and keep timetables synced across devices","info"),v("offline")}}catch(n){console.warn("[SIDEBAR] Failed to check auth state for sync controls:",n),o.style.display="none"}}function Ne(){const o=document.getElementById("save-to-cloud-btn"),e=document.getElementById("load-from-cloud-btn"),t=document.getElementById("cloud-sync-toggle");o&&!o.dataset.listenerAttached&&(o.addEventListener("click",Fe),o.dataset.listenerAttached="true"),e&&!e.dataset.listenerAttached&&(e.addEventListener("click",Ge),e.dataset.listenerAttached="true"),t&&!t.dataset.listenerAttached&&(t.addEventListener("click",qe),t.dataset.listenerAttached="true")}async function Fe(){var t,n;if(!h||!D){w("No presentation data to save","error");return}const o=document.getElementById("save-to-cloud-btn"),e=(t=o==null?void 0:o.querySelector(".sync-btn-text"))==null?void 0:t.textContent;try{if(w("Saving to cloud...","info"),v("syncing"),o){o.disabled=!0;const i=o.querySelector(".sync-btn-text");i&&(i.textContent="Saving...")}const s=I.getConfig().environment.apiBaseUrl,r=await B.syncToCloud(D,h,{apiBaseUrl:s,deviceAuth:S,title:h.title||((n=L[0])==null?void 0:n.title)||"Untitled Presentation"});if(r.success)w("Successfully saved to cloud!","success"),v("synced"),Q(),console.log("[SIDEBAR] Manual save to cloud successful");else throw new Error(r.error||"Failed to save to cloud")}catch(a){console.error("[SIDEBAR] Manual save to cloud failed:",a),w(`Save failed: ${a.message}`,"error"),v("error")}finally{if(o){o.disabled=!1;const a=o.querySelector(".sync-btn-text");a&&e&&(a.textContent=e)}}}async function Ge(){var t;if(!D){w("No presentation to load","error");return}const o=document.getElementById("load-from-cloud-btn"),e=(t=o==null?void 0:o.querySelector(".sync-btn-text"))==null?void 0:t.textContent;try{if(w("Loading from cloud...","info"),v("syncing"),o){o.disabled=!0;const r=o.querySelector(".sync-btn-text");r&&(r.textContent="Loading...")}const a=I.getConfig().environment.apiBaseUrl,s=await B.syncFromCloud(D,{apiBaseUrl:a,deviceAuth:S});if(s.success&&s.data){const r=s.data;if(h&&h.lastModified&&r.lastModified&&new Date(h.lastModified)>new Date(r.lastModified)&&!await Ve(h,r)){w("Load cancelled - keeping local version","info"),v("synced");return}h=r;const u=`timetable-${D}`;await $(u,r),_(r),w("Successfully loaded from cloud!","success"),v("synced"),Q(),console.log("[SIDEBAR] Manual load from cloud successful")}else if(s.error==="Presentation not found in cloud")w("No cloud version found for this presentation","info"),v("synced");else throw new Error(s.error||"Failed to load from cloud")}catch(n){console.error("[SIDEBAR] Manual load from cloud failed:",n),w(`Load failed: ${n.message}`,"error"),v("error")}finally{if(o){o.disabled=!1;const n=o.querySelector(".sync-btn-text");n&&e&&(n.textContent=e)}}}async function qe(){const o=document.getElementById("cloud-sync-toggle"),e=o==null?void 0:o.querySelector(".sync-btn-text");try{if(!await E.isAuthenticated()){w("Please login first to enable cloud sync","info");return}}catch{w("Authentication check failed","error");return}const t=o==null?void 0:o.classList.contains("active");if(t)o.classList.remove("active"),e&&(e.textContent="Cloud Sync: Off"),w("Cloud sync disabled","info"),v("offline");else{o.classList.add("active");try{const n=await E.getCurrentUser(),a=(n==null?void 0:n.email)||"user@example.com",s=a.length>25?a.substring(0,22)+"...":a;e&&(e.textContent=`Cloud Sync: ${s}`)}catch(n){console.warn("[SIDEBAR] Could not get user email for sync toggle:",n),e&&(e.textContent="Cloud Sync: On")}w("Cloud sync enabled - timetables will sync across devices","success"),v("synced"),Q()}console.log("[SIDEBAR] Cloud sync toggled:",!t)}function w(o,e="info"){let t=document.getElementById("sync-status-message");if(!t){t=document.createElement("div"),t.id="sync-status-message",t.className="sync-status-message";const n=document.getElementById("cloud-sync-section");n&&n.appendChild(t)}t.textContent=o,t.className=`sync-status-message ${e}`,t.style.display="block",(e==="success"||e==="info")&&setTimeout(()=>{t&&(t.style.display="none")},3e3)}function v(o){const e=document.getElementById("sync-indicator");if(e)switch(e.className="sync-indicator",e.classList.add(o),o){case"synced":e.textContent="●";break;case"syncing":e.textContent="⟳";break;case"error":e.textContent="⚠";break;case"offline":e.textContent="○";break;default:e.textContent="●"}}function Q(){const o=document.getElementById("last-sync-time");if(o){const t=new Date().toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});o.textContent=`Last sync: ${t}`}}async function ze(){try{const o=await E.isAuthenticated();v(o?"synced":"offline")}catch{v("error")}}async function Ve(o,e){return new Promise(t=>{const n=new Date(o.lastModified||0).toLocaleString(),a=new Date(e.lastModified||0).toLocaleString(),s=`Conflict detected:

Local version: ${n}
Cloud version: ${a}

Which version would you like to keep?`,r=confirm(`${s}

Click OK to use cloud version
Click Cancel to keep local version`);t(r)})}function V(o,e="loading"){const t=document.querySelector(".sidebar-header");t&&(t.style.display="flex");const n=document.querySelector(".sidebar-footer");n&&(n.style.display="block");const a=document.getElementById("timetable-title");a&&(a.textContent="Productory Powerups for Gamma");const s=document.getElementById("duration-badge");s&&(s.textContent="0h 0m");const r=e==="connecting"?"🔄":"⏳";document.getElementById("sidebar-main").innerHTML=`
    <div class="loading-state">
      <div class="loading-icon">${r}</div>
      <p class="loading-message">${o}</p>
    </div>
  `}function je(o){const e=document.querySelector(".sidebar-header");e&&(e.style.display="none");const t=document.querySelector(".sidebar-footer");t&&(t.style.display="none");const n=o?new URL(o).hostname:"unknown site";document.getElementById("sidebar-main").innerHTML=`
    <div class="wrong-domain-ui">
      <div class="wrong-domain-header">
        <div class="brand-logo">📊</div>
        <h3>Productory Powerups for Gamma</h3>
        <p class="brand-tagline">Built by educators, for educators</p>
      </div>
      
      <div class="wrong-domain-content">
        <div class="info-section">
          <div class="status-indicator">ℹ️</div>
          <div class="status-text">
            <h4>This extension works on Gamma presentations</h4>
            <p>You're currently on: <strong>${n}</strong></p>
          </div>
        </div>
        
        <div class="action-section">
          <p>To use Productory Powerups:</p>
          <ol class="instructions-list">
            <li>Navigate to <strong>gamma.app</strong></li>
            <li>Open or create a presentation</li>
            <li>Use the extension to generate timetables</li>
          </ol>
        </div>
        
        <div class="button-section">
          <button id="open-gamma-btn" class="primary-action-btn">
            <span class="btn-icon">🚀</span>
            <span class="btn-text">Open Gamma</span>
          </button>
        </div>
      </div>
      
      <div class="wrong-domain-footer">
        <p class="help-text">Transform your Gamma presentations into structured timetables with smart timing and export capabilities.</p>
      </div>
    </div>
  `;const a=document.getElementById("open-gamma-btn");a&&a.addEventListener("click",()=>{chrome.tabs.create({url:"https://gamma.app"})}),A([],"Wrong domain UI shown")}function X(o,e=!1,t=null){const n=document.querySelector(".sidebar-header");n&&(n.style.display="flex");const a=document.querySelector(".sidebar-footer");a&&(a.style.display="block");const s=document.getElementById("timetable-title");s&&(s.textContent="Productory Powerups for Gamma");const r=document.getElementById("duration-badge");r&&(r.textContent="0h 0m");const i=e?`
    <button id="retry-connection-btn" class="retry-btn">
      <span class="btn-icon">🔄</span>
      <span class="btn-text">Try Again</span>
    </button>
  `:"";if(document.getElementById("sidebar-main").innerHTML=`
    <div class="connection-error">
      <div class="error-header">
        <div class="error-icon">⚠️</div>
        <h4>Connection Issue</h4>
      </div>
      <div class="error-content">
        <p class="error-message">${o}</p>
        ${i}
      </div>
      <div class="error-footer">
        <p class="help-text">If the problem persists, try refreshing the Gamma presentation page.</p>
      </div>
    </div>
  `,e){const u=document.getElementById("retry-connection-btn");u&&u.addEventListener("click",()=>{V("Reconnecting..."),T&&t&&T.postMessage({type:"retry-connection",tabId:t})})}A([],`Connection error: ${o}`)}function He(o){const e=document.createElement("div");e.className="connection-warning-banner",e.innerHTML=`
    <div class="warning-content">
      <span class="warning-icon">⚠️</span>
      <span class="warning-text">${o}</span>
      <button class="warning-close">×</button>
    </div>
  `;const t=document.getElementById("sidebar-footer"),n=document.getElementById("sidebar-root");t?t.insertBefore(e,t.firstChild):n&&n.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},5e3);const a=e.querySelector(".warning-close");a&&a.addEventListener("click",()=>{e.parentNode&&e.parentNode.removeChild(e)})}
