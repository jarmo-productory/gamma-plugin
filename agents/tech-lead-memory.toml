[meta]
agent = "tech-lead-architect"
updated = 2025-09-05
sprint = "7+ Complete"
role = "Technical Architecture & Strategy"

[patterns]
# Sprint 6+ architectural patterns
architecture = "Supabase SSR client + RLS-aware patterns"
ux_pattern = "Auth-aware skeletons prevent FOUC (Supabase session)"
api_design = "Server-side Supabase client for session extraction"
database = "RLS with auth_id; no service-role in user flows"
validation = "E2E testing reveals gaps agent reports miss"

[metrics]
# Architecture health metrics
tech_debt = "minimal"
complexity_score = "reduced 40%"
api_latency = "< 200ms"
build_time = "< 30s"

[stack]
frontend = ["next.js 15.4.6", "react 19", "typescript 5.x"]
backend = ["supabase", "netlify-functions"]
infrastructure = ["netlify", "github-actions", "automatic-deployment"]
deployment = ["push-to-main", "4-minute-cycle", "production-parity-validated"]

[decisions]
sprint6 = ["Next.js App Router over Pages", "Supabase Auth over custom auth", "TOML for agent memories"]
sprint5 = ["Vanilla scaffold first approach validated", "Incremental migration successful"]

[principles]
core = ["Evidence over reports", "Validation at every step", "User data from source of truth"]
quality = ["0 errors baseline", "E2E testing mandatory", "TypeScript strict mode"]

[next]
architecture = ["Event-driven sync pattern", "WebSocket for real-time"]
priority = "Sprint 36: Fix auth type mismatches; Sprint 37-38: Type safety & JWT refresh"

[sprint36_findings]
# 2025-10-05 Architecture Evaluation
root_cause = "TEXT/UUID type mismatch in device_tokens.user_id causing 500 errors"
auth_flow = "Extension → device token (TEXT user_id) → RPC expects UUID → failure"
dev_friction = "Extension was locked to production API, no local development"
recommendation = "Hybrid approach: tactical fixes now, strategic redesign Sprint 37-38"

[sprint36_immediate_actions]
critical_fix = "Migrate device_tokens.user_id from TEXT to UUID"
enable_dev = "BUILD_ENV switching with environment.local.ts for localhost"
token_refresh = "Add extension-compatible refresh endpoint (no session required)"
type_safety = "Update RPC return types from TEXT to uuid"

[strategic_roadmap]
sprint37 = "Database type generation (Kysely/Prisma), JWT refresh tokens"
sprint38 = "Unified config management, remove Vite complexity, E2E auth tests"
future = "Evaluate OAuth2 device flow (RFC 8628) if multi-tenant needed"

[sprint38_root_cause_analysis]
# 2025-10-05 Production RPC Parameter Mismatch Investigation
date = "2025-10-05"
issue = "Extension presentation save returns 500: Parameter 4 $4 could not be matched"
root_cause = "RPC parameter order mismatch between code and database function"
evidence_migration = "20251004101500 deployed correctly to production (verified via migration list)"
evidence_function = "rpc_upsert_presentation_from_device(uuid, text, text, jsonb, text, integer, text)"
evidence_code = "packages/web route.ts passes params in wrong order: p_auth_id, p_email, p_gamma_url, p_title..."
evidence_git = "Commit f92a737 had CORRECT fix but was reverted in f96ea89 without documentation"
parameter_4_issue = "Code passes 'title' (text) where DB expects 'timetable_data' (jsonb)"

[sprint38_solution]
recommendation = "Re-apply reverted fix from commit f92a737"
confidence = "HIGH (99%)"
correct_order = "p_auth_id, p_gamma_url, p_title, p_timetable_data, p_start_time, p_total_duration, p_email"
broken_order = "p_auth_id, p_email, p_gamma_url, p_title, p_start_time, p_total_duration, p_timetable_data"
why_fix_works = "Supabase RPC named params use positional binding - order must match function signature exactly"
rollback_plan = "git revert HEAD if production fails; Netlify deploys in 4 minutes"
test_plan = "Local test with device-token → validate against local Supabase → deploy → prod validation"

[sprint38_architecture_lessons]
lesson_1 = "Supabase RPC named parameters are POSITIONAL - object property order matters"
lesson_2 = "Migration sync (local|remote) doesn't guarantee code correctness"
lesson_3 = "Always document WHY a working fix was reverted"
lesson_4 = "Extension and web paths use different code - need independent E2E tests"
prevention_1 = "Generate TypeScript types from Supabase schema (Kysely/Prisma)"
prevention_2 = "Add integration tests for device-token flows"
prevention_3 = "Pre-commit hooks to validate RPC signatures match database"

[cleanup_analysis]
# Sprint 8 discovery findings
date = "2025-08-22"
legacy_files = ["2,503 lines of vanilla JS in packages/web/src/", "35+ duplicate files src/ vs packages/extension/"]
security_issues = ["511 console.log statements", "95 innerHTML usage", "XSS vulnerabilities"]
build_duplication = ["vite.config.js manages 3 targets", "src/ and packages/extension/ identical"]
secrets_status = ["git history shows secret cleanup commits", "no hardcoded secrets found in current state"]

[architecture_debt]
# Current technical debt requiring Sprint 8 cleanup
duplicate_builds = "src/ directory mirrors packages/extension/ exactly"
legacy_web = "packages/web/src/ contains 2,503 lines of deprecated vanilla JS"
security_surface = "innerHTML usage creates XSS vulnerabilities in production"
production_logs = "console.log statements leak to production builds"
build_complexity = "vite.config.js manages extension/web/shared with complex switching logic"
